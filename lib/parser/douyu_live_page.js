'use strict';
const path = require('path')
const request = require(path.join(__dirname, '../util/request'))
const { requestStrToMap, md5, getUrlExt } = require(path.join(__dirname, '../utils'))

const vd_2_id = { 0: '10000', 1: '550', 2: '1200', 3: '2000', 4: '4000' }
const id_2_profile = { '550': '流畅', '1200': '高清', '2000': '超清', '4000': '蓝光4M', '10000': '蓝光10M' }
var CryptoJS = require("crypto-js")
var g91fbbbea6151d6e = [0xf8fd3736, 0x47ff4c0e, 0xfe9d70c8, 0xba1fb262, 0x3b2d8acf, 0x7a516b65, 0x3b272ec8, 0x9bc7032a, 0xcf956d0e, 0x82e76da2, 0x239677c5, 0x4d94c0e6, 0x269e2dd8, 0xc0d1923f, 0xa560b1c9, 0x497e2de4, 0x54fbda36, 0xf022ca60, 0x3e245f58, 0x70b1f262, 0x3ae7612a, 0xc32d6003, 0x1c630923, 0xc756a792, 0x9cdc6efd, 0xc8a0a77d, 0xc54e478b, 0x4d6e71e6, 0xdd8ae315, 0xfc71397b, 0xc0c6c84b, 0x46af4c39, 0x531efc3e, 0xc2d723ae, 0x8254a273, 0xeef960cb, 0xd3bf0dbc, 0x30e0fef1, 0xf3f589f4, 0x469b5d8d, 0x85f4af3c, 0x4d360887, 0xae99bf2e, 0x3efa1e57, 0xc2f44eb7, 0xee1526d7, 0xb9965551, 0xf41b1149, 0xa961e99, 0x712471a5, 0x73f966f, 0xf701b7e0, 0x2dc589e3, 0x2e270b68, 0xca201301, 0x2f13d047, 0x28446b55, 0x51773da2, 0xf9789ee9, 0x92d052aa, 0x56c29409, 0x36bf28bc, 0x94f218a6, 0x86ef6f8c, 0xf2bcc85, 0x35d7c3fc, 0xf34bf2b5, 0x33271971, 0xb0048c48, 0x56ef14a3, 0x18b8e332, 0xf8f38c88, 0x3056868, 0x4c88813f, 0xff5bf4cb, 0x499df281, 0xcde0f72e, 0x5ac34577, 0x31442a2d, 0x36a704b5, 0x1f96eae9, 0x2882522b, 0xbef46428, 0x1e56ee81, 0x6f52c35a, 0x2d383910, 0xd2a6521d, 0xd4e03342, 0x973feb1b, 0x7de6e56e, 0x27c5c409, 0xd1599025, 0xed65e4b6, 0xc32eb97a, 0xea742ba3, 0xd67cf395, 0x7cfee832, 0x5f2beefe, 0x8f54bcef, 0x60217623, 0x69a33f2d, 0x282b429f, 0xabeab84e, 0xe9a60126, 0x9c612739, 0x3576a9af, 0x83998b03, 0xb41e40d, 0xac3e8577, 0x84d4bbbc, 0xd9f30f9f, 0x382a2e83, 0x497011bb, 0xe5606c11, 0xf909db8e, 0x7df76ddb, 0x6332b938, 0xde9a9f15, 0xb5b4532d, 0xf586ae5e, 0xefdeca77, 0x6b1157cc, 0x985af2f9, 0xe3142b5f, 0xba9e0252, 0xd008c47a, 0x61e09a6f, 0x9abe657b, 0xa338983e, 0x3281414f, 0x58bd6482, 0x8f644f98, 0x606cd2ce, 0x272fcee1, 0xf1072ee4, 0x30b3359d, 0x19c97705, 0xab4ced50, 0x564ee94c, 0x695ea023, 0xf87abe56, 0xf0b14c62, 0x12688ca8, 0xedf8afc4, 0x7adcfac8, 0xa9f0e5a6, 0x667033c2, 0x62c2a888, 0x685f1e5e, 0x71cf151, 0x5a8675d4, 0x5411b1c5, 0xde4fce5c, 0x1a11f0d7, 0x23e522cd, 0x633faa04, 0xb6ddb5cf, 0x5bab20b8, 0xefb6b47, 0x182dc285, 0x45d1470a, 0x2f9d6fb8, 0x2385eaa4, 0xa1bcc732, 0xf5c80c44, 0x9e9ae517, 0x8e0bfe90, 0x660564d3, 0xfdf4031, 0x40648f53, 0xddc62ebb, 0x4cdb973d, 0x8d83252e, 0xe76aca7e, 0xceae73a0, 0x83e3f19, 0x89b1c003, 0x7f584b11, 0xb04fccfc, 0xceba195f, 0x590c814d, 0xa5b081ac, 0xe68bf512, 0x486cde6b, 0x37e65fe6, 0x61c2b1f9, 0x3afa8169, 0x2032ccda, 0xe8e440bc, 0x71bd5ab0, 0xa400bf4, 0x28c5036a, 0x8c29feca, 0xc13980e8, 0xff411a73, 0x7be3cd09, 0x6a03da2, 0xb02e4f74, 0xee4d343b, 0xe0632d7e, 0xdb2d9cb, 0x5f344ddf, 0xb214a694, 0xc40772f0, 0x2c5cd245, 0xeaeb1779, 0xd84edf62, 0x69c56511, 0xc06b98a6, 0x30f0bd22, 0xfc11e24f, 0x2733b6aa, 0xb6fd6d62, 0x41f35774, 0xdd6d8767, 0x1080d8b4, 0x1f15dfec, 0x2e120c9d, 0x9dd7e8cd, 0xdf67a90e, 0x906f414a, 0xd875cac4, 0xdd524d, 0x9705754b, 0x67555172, 0x150e7d15, 0x3f19e025, 0xc0ce9c06, 0xcfa52362, 0x95234325, 0x9b10917b, 0xba0df14c, 0xa04cc40e, 0x2840b011, 0x19a3c9ab, 0xade8bf11, 0x6a895e3b, 0x13f3e48d, 0x9faf6253, 0xb1f8fe0e, 0x4b504ce7, 0x7cc54db1, 0xb4ca76f7, 0xdf9444b5, 0x6e0a20bd, 0x9823653b, 0x26f64a12, 0x1f88efc0, 0xcb22a43d, 0xb24562f1, 0xb37d7554, 0xa218db01, 0x597c4216, 0xc5ec98bc, 0x9fa2e5ac, 0x7fdde701, 0x81a61bb8, 0xba0e32ee, 0xe45244b9, 0x897f4bca, 0x49823c41, 0x354ca438, 0x283c24cc, 0xbb0ce1a1, 0x19207673, 0x16efb54a, 0x255115c5, 0x5f32172, 0xee9c4855, 0x40c2723c, 0xec9ba27, 0xbc33e6d1, 0xcf7f476d, 0x2c431d0, 0xe2ada136, 0x66f8ef2b, 0x4fa147bd, 0x27a77c4b, 0x16b87e41, 0x6eb09d68, 0xc176f903, 0x6f50c827, 0xba49135b, 0xa1b833a3, 0x44b4dde5, 0xcb08bfce, 0x31452c6b, 0x9b8d2a57, 0x9d68271a, 0xcf70e626, 0xa3c08709, 0x654cb1b1, 0x4febc9b7, 0x134e113, 0xcb9f06c6, 0xba5662d, 0xb7fae591, 0xf9bd5e78, 0xc7fc16c4, 0x4fb806de, 0xcb929515, 0x5ba424fc, 0xfa55db3d, 0xbad7fa06, 0x107c162d, 0x3e6e400e, 0x7fbf4f26, 0x8940d70c, 0x3983e45, 0xc16c73aa, 0x34dfd64d, 0x25253cd, 0x6cf332f0, 0x27681833, 0x9e8a4897, 0x7893af4, 0x44820a34, 0xbebd53d9, 0x8a5ecffa, 0x88b6db72, 0xf509851b, 0x4d994c07, 0x8db78b25, 0x40cead91, 0xdd3d4970, 0x9cbfb247, 0x1bc9405e, 0x458f7eaf, 0x5bcc0ae6, 0xd87aaf97, 0x872dfbd0, 0xa701b374, 0x52ebc428, 0x3039ed6d, 0x773a33f8, 0x10008c91, 0xf622b204, 0x9329eff5, 0xe1bfb8ab, 0xf0688ff7, 0xade6eba3, 0xd293aeb6, 0x2b5b9ce6, 0xda1c79c9, 0x24f42879, 0xaef5888c, 0x151e09dd, 0xaadfe778, 0x5098557f, 0x17dba851, 0x1b49d38b, 0xe4ff7070, 0x254da0ed, 0x8d3e6b74, 0xf16c51ea, 0x3085557a, 0xb9e4673b, 0x114e5abc, 0xfdc2daf5, 0x72b0e7d1, 0x5f5fe21a, 0x22e270b3, 0xa8d565e, 0x82b17994, 0x163f7ce8, 0x6cd4125e, 0x1a2dc126, 0x554f87e0, 0x45e66529, 0x6f62b6d7, 0xceee0ac, 0x96c56c2, 0x5b07da65, 0x1c3cdbbc, 0x57a5438f, 0x49305bc3, 0x60da5cbb, 0xecc5587, 0x4444a8d6, 0x5268a289, 0x2d6b6a88, 0x3ba867eb, 0x570f0cba, 0xf8d25c9f, 0x6416ac7, 0x8cba9f60, 0x19c330a4, 0xe7df08b3, 0x3e8eb0ce, 0x12129734, 0xf120ce4b, 0x664bf72d, 0x41900718, 0xb307981d, 0xb99e157d, 0xd97ce2e8, 0x1a7dd5d7, 0x39f913f8];
var sign = function(g91fbbbea6151d6e0, g91fbbbea6151d6e1, g91fbbbea6151d6e2) {
    var rk = [33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33, 14, 16, 35, 41, 12, 40, 30, 10, 33];
    var k2 = [0x6eb5c3ed, 0x150ba7d4];
    var lk = [0x6eb5c3ed, 0x150ba7d4];
    var v = g91fbbbea6151d6e.slice(0);
    var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
    for (var O = 0; O < 398; O++) {
        v[O] ^= 0x50f2cc2c;
    }
    v[1] ^= lk[1];
    v[0] += lk[0];
    v[3] = (v[3] << (lk[1] % 16)) | (v[3] >>> (32 - (lk[1] % 16)));
    v[2] += lk[0];
    v[5] += lk[1];
    v[4] += lk[0];
    v[7] = (v[7] << (lk[1] % 16)) | (v[7] >>> (32 - (lk[1] % 16)));
    v[6] = (v[6] << (lk[0] % 16)) | (v[6] >>> (32 - (lk[0] % 16)));
    v[9] = (v[9] >>> (lk[1] % 16)) | (v[9] << (32 - (lk[1] % 16)));
    v[8] = (v[8] << (lk[0] % 16)) | (v[8] >>> (32 - (lk[0] % 16)));
    v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
    v[10] -= lk[0];
    v[13] -= lk[1];
    v[12] -= lk[0];
    v[15] = (v[15] << (lk[1] % 16)) | (v[15] >>> (32 - (lk[1] % 16)));
    v[14] += lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] ^= lk[1];
    v[18] += lk[0];
    v[21] = (v[21] << (lk[1] % 16)) | (v[21] >>> (32 - (lk[1] % 16)));
    v[20] += lk[0];
    v[23] += lk[1];
    v[22] += lk[0];
    v[25] = (v[25] << (lk[1] % 16)) | (v[25] >>> (32 - (lk[1] % 16)));
    v[24] = (v[24] << (lk[0] % 16)) | (v[24] >>> (32 - (lk[0] % 16)));
    v[27] = (v[27] >>> (lk[1] % 16)) | (v[27] << (32 - (lk[1] % 16)));
    v[26] = (v[26] << (lk[0] % 16)) | (v[26] >>> (32 - (lk[0] % 16)));
    v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
    v[28] -= lk[0];
    v[31] -= lk[1];
    v[30] -= lk[0];
    v[33] = (v[33] << (lk[1] % 16)) | (v[33] >>> (32 - (lk[1] % 16)));
    v[32] += lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] ^= lk[1];
    v[36] += lk[0];
    v[39] = (v[39] << (lk[1] % 16)) | (v[39] >>> (32 - (lk[1] % 16)));
    v[38] += lk[0];
    v[41] += lk[1];
    v[40] += lk[0];
    v[43] = (v[43] << (lk[1] % 16)) | (v[43] >>> (32 - (lk[1] % 16)));
    v[42] = (v[42] << (lk[0] % 16)) | (v[42] >>> (32 - (lk[0] % 16)));
    v[45] = (v[45] >>> (lk[1] % 16)) | (v[45] << (32 - (lk[1] % 16)));
    v[44] = (v[44] << (lk[0] % 16)) | (v[44] >>> (32 - (lk[0] % 16)));
    v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
    v[46] -= lk[0];
    v[49] -= lk[1];
    v[48] -= lk[0];
    v[51] = (v[51] << (lk[1] % 16)) | (v[51] >>> (32 - (lk[1] % 16)));
    v[50] += lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] ^= lk[1];
    v[54] += lk[0];
    v[57] = (v[57] << (lk[1] % 16)) | (v[57] >>> (32 - (lk[1] % 16)));
    v[56] += lk[0];
    v[59] += lk[1];
    v[58] += lk[0];
    v[61] = (v[61] << (lk[1] % 16)) | (v[61] >>> (32 - (lk[1] % 16)));
    v[60] = (v[60] << (lk[0] % 16)) | (v[60] >>> (32 - (lk[0] % 16)));
    v[63] = (v[63] >>> (lk[1] % 16)) | (v[63] << (32 - (lk[1] % 16)));
    v[62] = (v[62] << (lk[0] % 16)) | (v[62] >>> (32 - (lk[0] % 16)));
    v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
    v[64] -= lk[0];
    v[67] -= lk[1];
    v[66] -= lk[0];
    v[69] = (v[69] << (lk[1] % 16)) | (v[69] >>> (32 - (lk[1] % 16)));
    v[68] += lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] ^= lk[1];
    v[72] += lk[0];
    v[75] = (v[75] << (lk[1] % 16)) | (v[75] >>> (32 - (lk[1] % 16)));
    v[74] += lk[0];
    v[77] += lk[1];
    v[76] += lk[0];
    v[79] = (v[79] << (lk[1] % 16)) | (v[79] >>> (32 - (lk[1] % 16)));
    v[78] = (v[78] << (lk[0] % 16)) | (v[78] >>> (32 - (lk[0] % 16)));
    v[81] = (v[81] >>> (lk[1] % 16)) | (v[81] << (32 - (lk[1] % 16)));
    v[80] = (v[80] << (lk[0] % 16)) | (v[80] >>> (32 - (lk[0] % 16)));
    v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
    v[82] -= lk[0];
    v[85] -= lk[1];
    v[84] -= lk[0];
    v[87] = (v[87] << (lk[1] % 16)) | (v[87] >>> (32 - (lk[1] % 16)));
    v[86] += lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] ^= lk[1];
    v[90] += lk[0];
    v[93] = (v[93] << (lk[1] % 16)) | (v[93] >>> (32 - (lk[1] % 16)));
    v[92] += lk[0];
    v[95] += lk[1];
    v[94] += lk[0];
    v[97] = (v[97] << (lk[1] % 16)) | (v[97] >>> (32 - (lk[1] % 16)));
    v[96] = (v[96] << (lk[0] % 16)) | (v[96] >>> (32 - (lk[0] % 16)));
    v[99] = (v[99] >>> (lk[1] % 16)) | (v[99] << (32 - (lk[1] % 16)));
    v[98] = (v[98] << (lk[0] % 16)) | (v[98] >>> (32 - (lk[0] % 16)));
    v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
    v[100] -= lk[0];
    v[103] -= lk[1];
    v[102] -= lk[0];
    v[105] = (v[105] << (lk[1] % 16)) | (v[105] >>> (32 - (lk[1] % 16)));
    v[104] += lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] ^= lk[1];
    v[108] += lk[0];
    v[111] = (v[111] << (lk[1] % 16)) | (v[111] >>> (32 - (lk[1] % 16)));
    v[110] += lk[0];
    v[113] += lk[1];
    v[112] += lk[0];
    v[115] = (v[115] << (lk[1] % 16)) | (v[115] >>> (32 - (lk[1] % 16)));
    v[114] = (v[114] << (lk[0] % 16)) | (v[114] >>> (32 - (lk[0] % 16)));
    v[117] = (v[117] >>> (lk[1] % 16)) | (v[117] << (32 - (lk[1] % 16)));
    v[116] = (v[116] << (lk[0] % 16)) | (v[116] >>> (32 - (lk[0] % 16)));
    v[119] = (v[119] << (lk[1] % 16)) | (v[119] >>> (32 - (lk[1] % 16)));
    v[118] -= lk[0];
    v[121] -= lk[1];
    v[120] -= lk[0];
    v[123] = (v[123] << (lk[1] % 16)) | (v[123] >>> (32 - (lk[1] % 16)));
    v[122] += lk[0];
    v[125] -= lk[1];
    v[124] -= lk[0];
    v[127] ^= lk[1];
    v[126] += lk[0];
    v[129] = (v[129] << (lk[1] % 16)) | (v[129] >>> (32 - (lk[1] % 16)));
    v[128] += lk[0];
    v[131] += lk[1];
    v[130] += lk[0];
    v[133] = (v[133] << (lk[1] % 16)) | (v[133] >>> (32 - (lk[1] % 16)));
    v[132] = (v[132] << (lk[0] % 16)) | (v[132] >>> (32 - (lk[0] % 16)));
    v[135] = (v[135] >>> (lk[1] % 16)) | (v[135] << (32 - (lk[1] % 16)));
    v[134] = (v[134] << (lk[0] % 16)) | (v[134] >>> (32 - (lk[0] % 16)));
    v[137] = (v[137] << (lk[1] % 16)) | (v[137] >>> (32 - (lk[1] % 16)));
    v[136] -= lk[0];
    v[139] -= lk[1];
    v[138] -= lk[0];
    v[141] = (v[141] << (lk[1] % 16)) | (v[141] >>> (32 - (lk[1] % 16)));
    v[140] += lk[0];
    v[143] -= lk[1];
    v[142] -= lk[0];
    v[145] ^= lk[1];
    v[144] += lk[0];
    v[147] = (v[147] << (lk[1] % 16)) | (v[147] >>> (32 - (lk[1] % 16)));
    v[146] += lk[0];
    v[149] += lk[1];
    v[148] += lk[0];
    v[151] = (v[151] << (lk[1] % 16)) | (v[151] >>> (32 - (lk[1] % 16)));
    v[150] = (v[150] << (lk[0] % 16)) | (v[150] >>> (32 - (lk[0] % 16)));
    v[153] = (v[153] >>> (lk[1] % 16)) | (v[153] << (32 - (lk[1] % 16)));
    v[152] = (v[152] << (lk[0] % 16)) | (v[152] >>> (32 - (lk[0] % 16)));
    v[155] = (v[155] << (lk[1] % 16)) | (v[155] >>> (32 - (lk[1] % 16)));
    v[154] -= lk[0];
    v[157] -= lk[1];
    v[156] -= lk[0];
    v[159] = (v[159] << (lk[1] % 16)) | (v[159] >>> (32 - (lk[1] % 16)));
    v[158] += lk[0];
    v[161] -= lk[1];
    v[160] -= lk[0];
    v[163] ^= lk[1];
    v[162] += lk[0];
    v[165] = (v[165] << (lk[1] % 16)) | (v[165] >>> (32 - (lk[1] % 16)));
    v[164] += lk[0];
    v[167] += lk[1];
    v[166] += lk[0];
    v[169] = (v[169] << (lk[1] % 16)) | (v[169] >>> (32 - (lk[1] % 16)));
    v[168] = (v[168] << (lk[0] % 16)) | (v[168] >>> (32 - (lk[0] % 16)));
    v[171] = (v[171] >>> (lk[1] % 16)) | (v[171] << (32 - (lk[1] % 16)));
    v[170] = (v[170] << (lk[0] % 16)) | (v[170] >>> (32 - (lk[0] % 16)));
    v[173] = (v[173] << (lk[1] % 16)) | (v[173] >>> (32 - (lk[1] % 16)));
    v[172] -= lk[0];
    v[175] -= lk[1];
    v[174] -= lk[0];
    v[177] = (v[177] << (lk[1] % 16)) | (v[177] >>> (32 - (lk[1] % 16)));
    v[176] += lk[0];
    v[179] -= lk[1];
    v[178] -= lk[0];
    v[181] ^= lk[1];
    v[180] += lk[0];
    v[183] = (v[183] << (lk[1] % 16)) | (v[183] >>> (32 - (lk[1] % 16)));
    v[182] += lk[0];
    v[185] += lk[1];
    v[184] += lk[0];
    v[187] = (v[187] << (lk[1] % 16)) | (v[187] >>> (32 - (lk[1] % 16)));
    v[186] = (v[186] << (lk[0] % 16)) | (v[186] >>> (32 - (lk[0] % 16)));
    v[189] = (v[189] >>> (lk[1] % 16)) | (v[189] << (32 - (lk[1] % 16)));
    v[188] = (v[188] << (lk[0] % 16)) | (v[188] >>> (32 - (lk[0] % 16)));
    v[191] = (v[191] << (lk[1] % 16)) | (v[191] >>> (32 - (lk[1] % 16)));
    v[190] -= lk[0];
    v[193] -= lk[1];
    v[192] -= lk[0];
    v[195] = (v[195] << (lk[1] % 16)) | (v[195] >>> (32 - (lk[1] % 16)));
    v[194] += lk[0];
    v[197] -= lk[1];
    v[196] -= lk[0];
    v[199] ^= lk[1];
    v[198] += lk[0];
    v[201] = (v[201] << (lk[1] % 16)) | (v[201] >>> (32 - (lk[1] % 16)));
    v[200] += lk[0];
    v[203] += lk[1];
    v[202] += lk[0];
    v[205] = (v[205] << (lk[1] % 16)) | (v[205] >>> (32 - (lk[1] % 16)));
    v[204] = (v[204] << (lk[0] % 16)) | (v[204] >>> (32 - (lk[0] % 16)));
    v[207] = (v[207] >>> (lk[1] % 16)) | (v[207] << (32 - (lk[1] % 16)));
    v[206] = (v[206] << (lk[0] % 16)) | (v[206] >>> (32 - (lk[0] % 16)));
    v[209] = (v[209] << (lk[1] % 16)) | (v[209] >>> (32 - (lk[1] % 16)));
    v[208] -= lk[0];
    v[211] -= lk[1];
    v[210] -= lk[0];
    v[213] = (v[213] << (lk[1] % 16)) | (v[213] >>> (32 - (lk[1] % 16)));
    v[212] += lk[0];
    v[215] -= lk[1];
    v[214] -= lk[0];
    v[217] ^= lk[1];
    v[216] += lk[0];
    v[219] = (v[219] << (lk[1] % 16)) | (v[219] >>> (32 - (lk[1] % 16)));
    v[218] += lk[0];
    v[221] += lk[1];
    v[220] += lk[0];
    v[223] = (v[223] << (lk[1] % 16)) | (v[223] >>> (32 - (lk[1] % 16)));
    v[222] = (v[222] << (lk[0] % 16)) | (v[222] >>> (32 - (lk[0] % 16)));
    v[225] = (v[225] >>> (lk[1] % 16)) | (v[225] << (32 - (lk[1] % 16)));
    v[224] = (v[224] << (lk[0] % 16)) | (v[224] >>> (32 - (lk[0] % 16)));
    v[227] = (v[227] << (lk[1] % 16)) | (v[227] >>> (32 - (lk[1] % 16)));
    v[226] -= lk[0];
    v[229] -= lk[1];
    v[228] -= lk[0];
    v[231] = (v[231] << (lk[1] % 16)) | (v[231] >>> (32 - (lk[1] % 16)));
    v[230] += lk[0];
    v[233] -= lk[1];
    v[232] -= lk[0];
    v[235] ^= lk[1];
    v[234] += lk[0];
    v[237] = (v[237] << (lk[1] % 16)) | (v[237] >>> (32 - (lk[1] % 16)));
    v[236] += lk[0];
    v[239] += lk[1];
    v[238] += lk[0];
    v[241] = (v[241] << (lk[1] % 16)) | (v[241] >>> (32 - (lk[1] % 16)));
    v[240] = (v[240] << (lk[0] % 16)) | (v[240] >>> (32 - (lk[0] % 16)));
    v[243] = (v[243] >>> (lk[1] % 16)) | (v[243] << (32 - (lk[1] % 16)));
    v[242] = (v[242] << (lk[0] % 16)) | (v[242] >>> (32 - (lk[0] % 16)));
    v[245] = (v[245] << (lk[1] % 16)) | (v[245] >>> (32 - (lk[1] % 16)));
    v[244] -= lk[0];
    v[247] -= lk[1];
    v[246] -= lk[0];
    v[249] = (v[249] << (lk[1] % 16)) | (v[249] >>> (32 - (lk[1] % 16)));
    v[248] += lk[0];
    v[251] -= lk[1];
    v[250] -= lk[0];
    v[253] ^= lk[1];
    v[252] += lk[0];
    v[255] = (v[255] << (lk[1] % 16)) | (v[255] >>> (32 - (lk[1] % 16)));
    v[254] += lk[0];
    v[257] += lk[1];
    v[256] += lk[0];
    v[259] = (v[259] << (lk[1] % 16)) | (v[259] >>> (32 - (lk[1] % 16)));
    v[258] = (v[258] << (lk[0] % 16)) | (v[258] >>> (32 - (lk[0] % 16)));
    v[261] = (v[261] >>> (lk[1] % 16)) | (v[261] << (32 - (lk[1] % 16)));
    v[260] = (v[260] << (lk[0] % 16)) | (v[260] >>> (32 - (lk[0] % 16)));
    v[263] = (v[263] << (lk[1] % 16)) | (v[263] >>> (32 - (lk[1] % 16)));
    v[262] -= lk[0];
    v[265] -= lk[1];
    v[264] -= lk[0];
    v[267] = (v[267] << (lk[1] % 16)) | (v[267] >>> (32 - (lk[1] % 16)));
    v[266] += lk[0];
    v[269] -= lk[1];
    v[268] -= lk[0];
    v[271] ^= lk[1];
    v[270] += lk[0];
    v[273] = (v[273] << (lk[1] % 16)) | (v[273] >>> (32 - (lk[1] % 16)));
    v[272] += lk[0];
    v[275] += lk[1];
    v[274] += lk[0];
    v[277] = (v[277] << (lk[1] % 16)) | (v[277] >>> (32 - (lk[1] % 16)));
    v[276] = (v[276] << (lk[0] % 16)) | (v[276] >>> (32 - (lk[0] % 16)));
    v[279] = (v[279] >>> (lk[1] % 16)) | (v[279] << (32 - (lk[1] % 16)));
    v[278] = (v[278] << (lk[0] % 16)) | (v[278] >>> (32 - (lk[0] % 16)));
    v[281] = (v[281] << (lk[1] % 16)) | (v[281] >>> (32 - (lk[1] % 16)));
    v[280] -= lk[0];
    v[283] -= lk[1];
    v[282] -= lk[0];
    v[285] = (v[285] << (lk[1] % 16)) | (v[285] >>> (32 - (lk[1] % 16)));
    v[284] += lk[0];
    v[287] -= lk[1];
    v[286] -= lk[0];
    v[289] ^= lk[1];
    v[288] += lk[0];
    v[291] = (v[291] << (lk[1] % 16)) | (v[291] >>> (32 - (lk[1] % 16)));
    v[290] += lk[0];
    v[293] += lk[1];
    v[292] += lk[0];
    v[295] = (v[295] << (lk[1] % 16)) | (v[295] >>> (32 - (lk[1] % 16)));
    v[294] = (v[294] << (lk[0] % 16)) | (v[294] >>> (32 - (lk[0] % 16)));
    v[297] = (v[297] >>> (lk[1] % 16)) | (v[297] << (32 - (lk[1] % 16)));
    v[296] = (v[296] << (lk[0] % 16)) | (v[296] >>> (32 - (lk[0] % 16)));
    v[299] = (v[299] << (lk[1] % 16)) | (v[299] >>> (32 - (lk[1] % 16)));
    v[298] -= lk[0];
    v[301] -= lk[1];
    v[300] -= lk[0];
    v[303] = (v[303] << (lk[1] % 16)) | (v[303] >>> (32 - (lk[1] % 16)));
    v[302] += lk[0];
    v[305] -= lk[1];
    v[304] -= lk[0];
    v[307] ^= lk[1];
    v[306] += lk[0];
    v[309] = (v[309] << (lk[1] % 16)) | (v[309] >>> (32 - (lk[1] % 16)));
    v[308] += lk[0];
    v[311] += lk[1];
    v[310] += lk[0];
    v[313] = (v[313] << (lk[1] % 16)) | (v[313] >>> (32 - (lk[1] % 16)));
    v[312] = (v[312] << (lk[0] % 16)) | (v[312] >>> (32 - (lk[0] % 16)));
    v[315] = (v[315] >>> (lk[1] % 16)) | (v[315] << (32 - (lk[1] % 16)));
    v[314] = (v[314] << (lk[0] % 16)) | (v[314] >>> (32 - (lk[0] % 16)));
    v[317] = (v[317] << (lk[1] % 16)) | (v[317] >>> (32 - (lk[1] % 16)));
    v[316] -= lk[0];
    v[319] -= lk[1];
    v[318] -= lk[0];
    v[321] = (v[321] << (lk[1] % 16)) | (v[321] >>> (32 - (lk[1] % 16)));
    v[320] += lk[0];
    v[323] -= lk[1];
    v[322] -= lk[0];
    v[325] ^= lk[1];
    v[324] += lk[0];
    v[327] = (v[327] << (lk[1] % 16)) | (v[327] >>> (32 - (lk[1] % 16)));
    v[326] += lk[0];
    v[329] += lk[1];
    v[328] += lk[0];
    v[331] = (v[331] << (lk[1] % 16)) | (v[331] >>> (32 - (lk[1] % 16)));
    v[330] = (v[330] << (lk[0] % 16)) | (v[330] >>> (32 - (lk[0] % 16)));
    v[333] = (v[333] >>> (lk[1] % 16)) | (v[333] << (32 - (lk[1] % 16)));
    v[332] = (v[332] << (lk[0] % 16)) | (v[332] >>> (32 - (lk[0] % 16)));
    v[335] = (v[335] << (lk[1] % 16)) | (v[335] >>> (32 - (lk[1] % 16)));
    v[334] -= lk[0];
    v[337] -= lk[1];
    v[336] -= lk[0];
    v[339] = (v[339] << (lk[1] % 16)) | (v[339] >>> (32 - (lk[1] % 16)));
    v[338] += lk[0];
    v[341] -= lk[1];
    v[340] -= lk[0];
    v[343] ^= lk[1];
    v[342] += lk[0];
    v[345] = (v[345] << (lk[1] % 16)) | (v[345] >>> (32 - (lk[1] % 16)));
    v[344] += lk[0];
    v[347] += lk[1];
    v[346] += lk[0];
    v[349] = (v[349] << (lk[1] % 16)) | (v[349] >>> (32 - (lk[1] % 16)));
    v[348] = (v[348] << (lk[0] % 16)) | (v[348] >>> (32 - (lk[0] % 16)));
    v[351] = (v[351] >>> (lk[1] % 16)) | (v[351] << (32 - (lk[1] % 16)));
    v[350] = (v[350] << (lk[0] % 16)) | (v[350] >>> (32 - (lk[0] % 16)));
    v[353] = (v[353] << (lk[1] % 16)) | (v[353] >>> (32 - (lk[1] % 16)));
    v[352] -= lk[0];
    v[355] -= lk[1];
    v[354] -= lk[0];
    v[357] = (v[357] << (lk[1] % 16)) | (v[357] >>> (32 - (lk[1] % 16)));
    v[356] += lk[0];
    v[359] -= lk[1];
    v[358] -= lk[0];
    v[361] ^= lk[1];
    v[360] += lk[0];
    v[363] = (v[363] << (lk[1] % 16)) | (v[363] >>> (32 - (lk[1] % 16)));
    v[362] += lk[0];
    v[365] += lk[1];
    v[364] += lk[0];
    v[367] = (v[367] << (lk[1] % 16)) | (v[367] >>> (32 - (lk[1] % 16)));
    v[366] = (v[366] << (lk[0] % 16)) | (v[366] >>> (32 - (lk[0] % 16)));
    v[369] = (v[369] >>> (lk[1] % 16)) | (v[369] << (32 - (lk[1] % 16)));
    v[368] = (v[368] << (lk[0] % 16)) | (v[368] >>> (32 - (lk[0] % 16)));
    v[371] = (v[371] << (lk[1] % 16)) | (v[371] >>> (32 - (lk[1] % 16)));
    v[370] -= lk[0];
    v[373] -= lk[1];
    v[372] -= lk[0];
    v[375] = (v[375] << (lk[1] % 16)) | (v[375] >>> (32 - (lk[1] % 16)));
    v[374] += lk[0];
    v[377] -= lk[1];
    v[376] -= lk[0];
    v[379] ^= lk[1];
    v[378] += lk[0];
    v[381] = (v[381] << (lk[1] % 16)) | (v[381] >>> (32 - (lk[1] % 16)));
    v[380] += lk[0];
    v[383] += lk[1];
    v[382] += lk[0];
    v[385] = (v[385] << (lk[1] % 16)) | (v[385] >>> (32 - (lk[1] % 16)));
    v[384] = (v[384] << (lk[0] % 16)) | (v[384] >>> (32 - (lk[0] % 16)));
    v[387] = (v[387] >>> (lk[1] % 16)) | (v[387] << (32 - (lk[1] % 16)));
    v[386] = (v[386] << (lk[0] % 16)) | (v[386] >>> (32 - (lk[0] % 16)));
    v[389] = (v[389] << (lk[1] % 16)) | (v[389] >>> (32 - (lk[1] % 16)));
    v[388] -= lk[0];
    v[391] -= lk[1];
    v[390] -= lk[0];
    v[393] = (v[393] << (lk[1] % 16)) | (v[393] >>> (32 - (lk[1] % 16)));
    v[392] += lk[0];
    v[395] -= lk[1];
    v[394] -= lk[0];
    v[397] ^= lk[1];
    v[396] += lk[0];
    for (var I = 0; I < 398; I += 2) {
        var i, v0 = v[I] ^ k2[0],
            v1 = v[I + 1] ^ k2[1],
            d = 0x9E3779B9,
            sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 397; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x50f2cc2c;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(g91fbbbea6151d6e0, g91fbbbea6151d6e1, g91fbbbea6151d6e2);
}
var exec = async function(params, opts) {
    logger.info("matching info")
    let url_macth = params.url.match(/douyu.com\/([0-9]+)/iu)
    let roomid = url_macth[1]
    logger.info("roomid " + roomid)


    let info_url = `https://www.douyu.com/betard/${roomid}`
    let content_s = await request.agent({ 'referer': params.url }, opts)
        .post(info_url)
        .set('referer', params.url)
    try {
        let json = JSON.parse(content_s.text)
    } catch (err) {
        logger.info('fetch info error!')
        return []
    }
    let title = json['room']['room_name']

    let t = parseInt((new Date()).getTime() / 1000).toString()
    let did = md5(t)
    let signstr = sign(roomid, did, t)
    let pas = requestStrToMap(signstr)
    let streams = []
    for (let rate in vd_2_id) {
        let payload = {
            v: pas['v'],
            did: did,
            tt: t,
            sign: pas['sign'],
            cdn: '',
            rate: rate,
            ver: 'Douyu_219092705',
            iar: 1,
            ive: 0
        }
        let info_api = `https://www.douyu.com/lapi/live/getH5Play/${roomid}`
        let content = await request.agent({ 'referer': params.url }, opts)
            .post(info_api)
            .set('referer', params.url)
            .type('form')
            .send(payload)
        let vjson = JSON.parse(content.text)
        if (vjson['error'] == 0) {
            let stream_id = vd_2_id[rate]
            let ext = getUrlExt(vjson['data']['rtmp_live'])
            streams[stream_id] = {
                'id': stream_id,
                'video_profile': id_2_profile[stream_id],
                'type': 'video',
                'container': ext,
                'src': [`${vjson['data']['rtmp_url']}/${vjson['data']['rtmp_live']}`],
                'format': ext,
                'isRemote': true
            }
        }
    }
    return [{
        "title": title,
        "url": params.url,
        "merge": false,
        "streams": streams
    }]
}
exports = module.exports = { exec, vp: true }
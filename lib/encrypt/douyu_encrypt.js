var CryptoJS = require("crypto-js")
var vdwdae325w_64we = "220120191014";
var o0e0f26bdb45bf0 = [0xf1e47bdc, 0xd852fb06, 0x906ee0a5, 0x6d7dd471, 0x706e43c0, 0xd781cabf, 0x3762f90c, 0xd0d7a67, 0x3511f277, 0x4914bf9c, 0x71c0ba0e, 0x48271a92, 0xec120869, 0x80825160, 0x25ca399b, 0x27e80dc2, 0xfaccff4b, 0xfd300531, 0x746fae8b, 0x74e3d5d9, 0x3a8b492d, 0xef0bc9e2, 0x9b89401b, 0x3a5ccda9, 0xd383e276, 0x6f084892, 0x2109922a, 0x7710dacd, 0xab233b5c, 0xe48c2e6a, 0xe211866c, 0xc47618f2, 0x5531f758, 0x1707e7c1, 0xda84b0f9, 0xc8683b46, 0xac21be52, 0x4f1de26f, 0x53d9774a, 0x2097b54e, 0x9ebbbbec, 0x8a3a2e8c, 0x534c3915, 0xe0654c19, 0x56181c07, 0x6a67b9a9, 0x431466bd, 0x1137abfe, 0x73b64ad4, 0xfde35cda, 0xa342a449, 0xd9e81bcf, 0xd6481819, 0x56e76801, 0x2efc21cb, 0xfcecfc9c, 0x3fe3107d, 0xe07bcea6, 0xfdd57ec4, 0x24b394f, 0x42e7cf3d, 0x11455e20, 0xc2547aef, 0xcd3fe14a, 0xcb69ddd4, 0x8747201, 0xb8d1083b, 0x77bc03dd, 0xb2c89db6, 0x2bef3da4, 0x8eaf6d77, 0xb4a363fb, 0x6e0ced43, 0x5d34d006, 0x8edc566e, 0x50afbf54, 0x7624d5d5, 0xb0192874, 0x6e6a4720, 0x73af01c8, 0x6a63db1d, 0x534a40f, 0x7442405d, 0xf13d2d2f, 0xf96c206c, 0xcd7c3a2c, 0x5a21b822, 0xc178c355, 0xfc2c9130, 0x5a578765, 0xfe5c486c, 0x75891a09, 0x6ea91d5d, 0xfecdbdd0, 0x416c4b58, 0x1dd30b94, 0xec682079, 0x39faf617, 0x4139ca04, 0xefc65fc0, 0x732e7285, 0x693e94b2, 0x9fdfdeec, 0xda64694e, 0xdec5269a, 0x16d5ffaf, 0x99e14815, 0x1292083c, 0xfdc84737, 0x29916aae, 0xb9ba4a2b, 0xe70a5091, 0x45067b6b, 0xc3a98139, 0x43aa2f1e, 0x3e864156, 0x40751758, 0x973a1dd1, 0xdf4f83bc, 0x95939968, 0x1a56cda9, 0xd3aeeaa2, 0x434b89bb, 0xc44f9c2e, 0xf02c5773, 0xcfd59360, 0x3b65e8e2, 0x3b949df];
var o0e0f26bdb45bf1 = [0xbe4914bb, 0xdee9797b, 0xf64f135c, 0x3cef3737, 0x51c19edf, 0x7942b0fc, 0x95ae959e, 0x682861cf, 0x46709684, 0x63640414, 0xabddfd38, 0x8b668b58, 0xab9dbb7b, 0xf1a50967, 0x3addd3cd, 0x3fbd6e1, 0x308a2754, 0xc987edd1, 0xed659047, 0x41efa07d, 0x5d526990, 0x6a378363, 0x4a50848f, 0x6039afd6, 0xc51b98d7, 0x480a309d, 0x800cd0ea, 0xaf6eeb7a, 0x4c43cb57, 0xb2cdffdf, 0x47a05a49, 0x5eb72608, 0xb5e44bf4, 0x2272fb, 0x338e8425, 0x70340d38, 0x3d57f2d9, 0xeb8b23a3, 0xe0ca736c, 0xb663ea09, 0x1551432b, 0x35c68d66, 0x661f7aad, 0xf7f81cb2, 0xcc492d7f, 0xedb226a4, 0x2333137a, 0xa7cb33b, 0xdc82e183, 0x891ae23f, 0xb537a9ab, 0xb9f8b6c5, 0xebb3f9eb, 0x11785bc8, 0xd4651e7c, 0xfd039458, 0xf27587b3, 0xa9eea619, 0x45ac8e9c, 0x740c8f9b, 0x4e749529, 0x1af6c270, 0x24fea15b, 0x1445675c, 0xcdc6a286, 0x35bdb08d, 0xf94a2cf3, 0x6f6dbe8c, 0xe949844f, 0x4e4f77ff, 0xd3b35dcd, 0x600750f1, 0xc54e9da0, 0xf3bbbc09, 0x4a246884, 0xafcf1b9d, 0xc8a9a591, 0x5bc82eab, 0xe2891e83, 0xf24db04f, 0x606315ef, 0xb6450eab, 0x924f1756, 0xc860c4d6, 0xdbf76422, 0x6ef26309, 0x6b149488, 0xf1bd5d79, 0x2bf28f90, 0xc3d23ff9, 0xeecbb809, 0x49ef3973, 0xb7ca064b, 0xacc478, 0x125b8806, 0x745c425d, 0x14decf44, 0xd3a5ff4a, 0x3abcfe02, 0x317390de, 0x749a444e, 0xae3a4ec5, 0x8e8b8b9b, 0xe5407d02, 0xbfebaeed, 0xd15edbb2, 0x910f990e, 0xcd01b597, 0xbb9bdaff, 0xff9f32ec, 0x26c8dc1e, 0x7d6596c2];
var o0e0f26bdb45bf2 = [0xf21dffab, 0x6daa7f40, 0x8d31ae1c, 0x77f9e18, 0xc48783c, 0x82f06e40, 0x9d54c6bb, 0xab868991, 0x17d24e40, 0x9a160882, 0x3107adda, 0x9cf12523, 0xd314e590, 0xc75e84d3, 0xba0b2353, 0x486722cb, 0xe3bb54f8, 0xb71608c2, 0xc5762e6d, 0x3e5c75ca, 0x55ca74b6, 0x4412a815, 0xad5cf6d4, 0x74c154a9, 0xbc6ee7c0, 0x7c0844f7, 0x2ff81f9d, 0x5bfa24fb, 0xb5d3755c, 0xd15462fd, 0xfefad006, 0x10d7da13, 0x853b906f, 0x5b6fa3c0, 0x56047966, 0x6260ec7e, 0x1cf5b753, 0xe6386c32, 0x7b3772ef, 0x346dca1e, 0x92d256eb, 0x35ad8a7c, 0x27c08096, 0x17d8c27e, 0xc0939529, 0x8b562190, 0x459539f0, 0x8748ea0d, 0xb1f6f2e2, 0x86d61af6, 0xd90b6548, 0x20f9f701, 0x9481ed48, 0x8bd98b9e, 0xe639340e, 0x41bb9ca8, 0xffc9725, 0xd51bafab, 0x642c83fa, 0xd5939584, 0x293b7ec9, 0xf4f64cb3, 0xac371ddc, 0x2928a456, 0xccc2045f, 0x5077fd43, 0x91b390f4, 0xfda5fa4f, 0xceadbb85, 0xb8ad4c92, 0x4c0a8d83, 0x31ef1d66, 0x323111eb, 0xa81016c, 0xe183b752, 0xe5972a03, 0x7afbba77, 0x6ef80392, 0x7243bf73, 0x391e9d8a, 0x7741f874, 0x513d4bc3, 0x5f4629ab, 0x688f4b6b, 0x4a6eb24a, 0xcae51b7f, 0xa2b172cb, 0x1d88fe61, 0xf9f1608d, 0x76a0af35, 0xd4211cb, 0xac96d72d, 0x827ed22d, 0xd4373bda, 0x38659025, 0xbb5e09c1, 0x48f4e338, 0x4c1814f, 0xb85064d7, 0x9046c8b7, 0x984c2b2e, 0x518d063b, 0xbb8dc1a9, 0xe4593841, 0xd4181aaf, 0x9539f044, 0xa3eab685, 0x56bf120e, 0x6a95cc13, 0xf6dd9931, 0xe76fafb5, 0x3944a0ce, 0xe8b70929, 0x3fe8be52, 0x750a788e, 0xcf7ed10e, 0x68a76c9d, 0xbfdc9db3, 0x6c11bafd, 0x4affa5af, 0x92b4bf61, 0x6f24abd1, 0x7837d396, 0xacc06fb0, 0x918f0305, 0x42089dc5, 0x9027f368, 0x3dafbd94, 0x2b569554, 0xa97459a6, 0xec9b9541, 0x9cf3e681];
var o0e0f26bdb45bf3 = [0x8293d4be, 0xa8ccdb36, 0xfa5b74ae, 0xc6188002, 0x61771037, 0x58b106dc, 0x93774b95, 0xe39013ae, 0xa36e4aa8, 0x929566f, 0xbe85df2b, 0xe466be84, 0xe9dadb98, 0x800e3c00, 0x98688823, 0x77683f7e, 0x24a6303c, 0xf06d7529, 0x883c2e86, 0x42d13ce9, 0xb74a7edf, 0xe8dd3abc, 0x28590301, 0x68cd7766, 0x231e2e91, 0x6f448f11, 0xa9065090, 0x27fd8e2d, 0xa675b059, 0x4e03218c, 0x2efc3e7a, 0x81b11bbd, 0x696098f0, 0xe4f0b54e, 0x36f68a1, 0x52b62475, 0xd4d521e3, 0x69f30fe8, 0x5384958e, 0xdc6fb3bf, 0x92afccc, 0xb72e495e, 0x6a2b698, 0xdcc5331, 0xc8fc17bc, 0x435068ae, 0x8361b0e, 0xb1b772bd, 0xa72472bc, 0x4eaff1b2, 0x166d20b7, 0xcf6a6b2b, 0x30ea0e0a, 0xc91750d1, 0x5d11869d, 0xf86bfc0d, 0xe5c3e208, 0x829bf4e4, 0x356bd318, 0x99b39e9, 0xb57ca568, 0x4803f6b3, 0x49def0c9, 0xb572a23, 0x678809aa, 0xe2ea5acc, 0xd8834110, 0x44f53573, 0xdea33dca, 0x9a187499, 0x3a15baa5, 0xb3a37f53, 0x4207c383, 0xe67e0b4d, 0x59c64d60, 0x91801074, 0x20c588c, 0xe8b8905d, 0x39134559, 0xc5546a80, 0xa4925e38, 0xe9a2cf20, 0xe4b8b0ac, 0x659cc6ad, 0xc62e71e1, 0x27b204b3, 0x1c486e4b, 0x74d64bde, 0xb8489517, 0x39fe6ec4, 0x57eee090, 0x4f0f7da3, 0x5a9e6617, 0x814a5a27, 0xc1aaf87f, 0xeec2ffd0, 0x65d00c01, 0x7723201a, 0x73d555c6, 0x5b44a91d, 0x7d6709e8, 0x646aeb5, 0x23e69eb9, 0x877c1226, 0xc5a8c8b5, 0x8834f550, 0x55234118, 0x29b2486c, 0x56bed062, 0x4a38d0b, 0x610568f6, 0xcf0f4a85, 0x8c74e9f2, 0xf932696a, 0xe04af18, 0x8ce171a5, 0xfc1c533e, 0xdbaffac6];
var o0e0f26bdb45bf4 = [0x5d092a1a, 0x92851030, 0xe9772c12, 0xdac2352f, 0xe2bdfcf6, 0xe0ee15b0, 0x6b6e24cc, 0xaf4cd713, 0x42007fff, 0x218d912d, 0xc979a634, 0xcccb651, 0xa965082e, 0x400d2dd2, 0xf5208aea, 0xe39deddc, 0xb0693033, 0x2ca8e65e, 0xc7a19489, 0x9262d4fb, 0x5fb48301, 0x4a60f23a, 0x86aaa47c, 0x19ffbfe3, 0x149622f3, 0xd3df9eab, 0xe479730d, 0xbd93084, 0xe5c97172, 0xdab6dc5f, 0xe6377c45, 0x9fd4d4f3, 0x7489ec31, 0xfc6aa451, 0x5b39bd23, 0xbb14e4d3, 0x7195bb6b, 0xcc807328, 0x5770ec10, 0xf7f086e, 0xc0b32fb1, 0x43900fbb, 0xa2ce0224, 0xa1359b10, 0x7a85349, 0x5bf248f3, 0x8dd97cd9, 0xb775e10f, 0xd31eb864, 0xb9aaa743, 0x2ab36a09, 0x1ee21432, 0x2d09069b, 0x22cdba95, 0xc8d55a3e, 0x580bd36, 0x63590dc4, 0xdfff5316, 0x2f67565d, 0x8c60b0ae, 0xd80141e2, 0xd9d2a937, 0x7b16fc84, 0xdb818dc5, 0xb957caec, 0x7590c81b, 0xa4b04e70, 0xb9dd713a, 0xed86bfbd, 0x3394ecef, 0xc383d7e2, 0xf23cc897, 0x94571e9f, 0xcd7bd8a, 0x7bdc6894, 0x63c4f86c, 0x1c6364cc, 0x1fa15908, 0xe59a329, 0xadad6d3b, 0x8c424ed9, 0x3eb6b20e, 0x982471f, 0x209e4569, 0x7178eee, 0x71833cd2, 0xf9acc0a9, 0x47a1637b, 0xa11a56e8, 0x74e25fea, 0x7310ab8f, 0x4d834885, 0x419b1ae1, 0xf49a414a, 0x94b1fbe, 0xc7715202, 0x8c424ed9, 0x52112ac9, 0x26656576, 0x9ccdb8e0, 0xeb482cb3, 0xf8909697, 0x7f159a1d, 0xf3ec1a35, 0xb3cabbe2, 0xbed6ec8c, 0x4455312, 0xe12f00c8, 0x64cabe09, 0x9be3c0a, 0xd4bcea02, 0x26b202c5, 0xcb1096e2, 0x90f7f250, 0xa73acbb5, 0x5b9eff6d, 0xdb54941b, 0xd323616, 0xa399f40c, 0x4364388c, 0xe327392c, 0x31cf303f, 0x2489f27d, 0x7e2a4746, 0x8d419b97, 0x46cb5f8d, 0xcac1668a, 0x86445307, 0x1941ae3, 0x58525637, 0xa5164a71, 0x7af4703a, 0xc077faf2, 0xb7ed02c3, 0x7e05053, 0x2e4466dc];
function q7cad0d5d90(h9degb1f26f0, h9degb1f26f1, h9degb1f26f2, k) {
    var rk = [33, 14, 30, 39, 20, 23, 19, 19, 10, 33, 14, 30, 39, 20, 23, 19, 19, 10, 33, 14, 30, 39, 20, 23, 19, 19, 10, 33, 14, 30, 39, 20, 23, 19, 19, 10, 33, 14, 30, 39, 20, 23, 19, 19, 10, 33, 14, 30, 39, 20, 23, 19, 19, 10, 33, 14, 30, 39, 20, 23, 19, 19, 10, 33];
    var k2 = [0xa18e115, 0x72ca799f];
    var lk = [0xa18e115, 0x72ca799f];
    var v = o0e0f26bdb45bf0.slice(0);
    for (var O = 0; O < 128; O++) {
        v[O] ^= 0x79af34c0;
    }
    v[1] += lk[1];
    v[0] += lk[0];
    v[3] = (v[3] >>> (lk[1] % 16)) | (v[3] << (32 - (lk[1] % 16)));
    v[2] ^= lk[0];
    v[5] -= lk[1];
    v[4] = (v[4] >>> (lk[0] % 16)) | (v[4] << (32 - (lk[0] % 16)));
    v[7] += lk[1];
    v[6] = (v[6] << (lk[0] % 16)) | (v[6] >>> (32 - (lk[0] % 16)));
    v[9] -= lk[1];
    v[8] -= lk[0];
    v[11] -= lk[1];
    v[10] ^= lk[0];
    v[13] -= lk[1];
    v[12] += lk[0];
    v[15] = (v[15] << (lk[1] % 16)) | (v[15] >>> (32 - (lk[1] % 16)));
    v[14] -= lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] += lk[1];
    v[18] += lk[0];
    v[21] = (v[21] >>> (lk[1] % 16)) | (v[21] << (32 - (lk[1] % 16)));
    v[20] ^= lk[0];
    v[23] -= lk[1];
    v[22] = (v[22] >>> (lk[0] % 16)) | (v[22] << (32 - (lk[0] % 16)));
    v[25] += lk[1];
    v[24] = (v[24] << (lk[0] % 16)) | (v[24] >>> (32 - (lk[0] % 16)));
    v[27] -= lk[1];
    v[26] -= lk[0];
    v[29] -= lk[1];
    v[28] ^= lk[0];
    v[31] -= lk[1];
    v[30] += lk[0];
    v[33] = (v[33] << (lk[1] % 16)) | (v[33] >>> (32 - (lk[1] % 16)));
    v[32] -= lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] += lk[1];
    v[36] += lk[0];
    v[39] = (v[39] >>> (lk[1] % 16)) | (v[39] << (32 - (lk[1] % 16)));
    v[38] ^= lk[0];
    v[41] -= lk[1];
    v[40] = (v[40] >>> (lk[0] % 16)) | (v[40] << (32 - (lk[0] % 16)));
    v[43] += lk[1];
    v[42] = (v[42] << (lk[0] % 16)) | (v[42] >>> (32 - (lk[0] % 16)));
    v[45] -= lk[1];
    v[44] -= lk[0];
    v[47] -= lk[1];
    v[46] ^= lk[0];
    v[49] -= lk[1];
    v[48] += lk[0];
    v[51] = (v[51] << (lk[1] % 16)) | (v[51] >>> (32 - (lk[1] % 16)));
    v[50] -= lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] += lk[1];
    v[54] += lk[0];
    v[57] = (v[57] >>> (lk[1] % 16)) | (v[57] << (32 - (lk[1] % 16)));
    v[56] ^= lk[0];
    v[59] -= lk[1];
    v[58] = (v[58] >>> (lk[0] % 16)) | (v[58] << (32 - (lk[0] % 16)));
    v[61] += lk[1];
    v[60] = (v[60] << (lk[0] % 16)) | (v[60] >>> (32 - (lk[0] % 16)));
    v[63] -= lk[1];
    v[62] -= lk[0];
    v[65] -= lk[1];
    v[64] ^= lk[0];
    v[67] -= lk[1];
    v[66] += lk[0];
    v[69] = (v[69] << (lk[1] % 16)) | (v[69] >>> (32 - (lk[1] % 16)));
    v[68] -= lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] += lk[1];
    v[72] += lk[0];
    v[75] = (v[75] >>> (lk[1] % 16)) | (v[75] << (32 - (lk[1] % 16)));
    v[74] ^= lk[0];
    v[77] -= lk[1];
    v[76] = (v[76] >>> (lk[0] % 16)) | (v[76] << (32 - (lk[0] % 16)));
    v[79] += lk[1];
    v[78] = (v[78] << (lk[0] % 16)) | (v[78] >>> (32 - (lk[0] % 16)));
    v[81] -= lk[1];
    v[80] -= lk[0];
    v[83] -= lk[1];
    v[82] ^= lk[0];
    v[85] -= lk[1];
    v[84] += lk[0];
    v[87] = (v[87] << (lk[1] % 16)) | (v[87] >>> (32 - (lk[1] % 16)));
    v[86] -= lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] += lk[1];
    v[90] += lk[0];
    v[93] = (v[93] >>> (lk[1] % 16)) | (v[93] << (32 - (lk[1] % 16)));
    v[92] ^= lk[0];
    v[95] -= lk[1];
    v[94] = (v[94] >>> (lk[0] % 16)) | (v[94] << (32 - (lk[0] % 16)));
    v[97] += lk[1];
    v[96] = (v[96] << (lk[0] % 16)) | (v[96] >>> (32 - (lk[0] % 16)));
    v[99] -= lk[1];
    v[98] -= lk[0];
    v[101] -= lk[1];
    v[100] ^= lk[0];
    v[103] -= lk[1];
    v[102] += lk[0];
    v[105] = (v[105] << (lk[1] % 16)) | (v[105] >>> (32 - (lk[1] % 16)));
    v[104] -= lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] += lk[1];
    v[108] += lk[0];
    v[111] = (v[111] >>> (lk[1] % 16)) | (v[111] << (32 - (lk[1] % 16)));
    v[110] ^= lk[0];
    v[113] -= lk[1];
    v[112] = (v[112] >>> (lk[0] % 16)) | (v[112] << (32 - (lk[0] % 16)));
    v[115] += lk[1];
    v[114] = (v[114] << (lk[0] % 16)) | (v[114] >>> (32 - (lk[0] % 16)));
    v[117] -= lk[1];
    v[116] -= lk[0];
    v[119] -= lk[1];
    v[118] ^= lk[0];
    v[121] -= lk[1];
    v[120] += lk[0];
    v[123] = (v[123] << (lk[1] % 16)) | (v[123] >>> (32 - (lk[1] % 16)));
    v[122] -= lk[0];
    v[125] -= lk[1];
    v[124] -= lk[0];
    v[127] += lk[1];
    v[126] += lk[0];
    for (var I = 0; I < 128; I += 2) {
        var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 127; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x79af34c0;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(h9degb1f26f0, h9degb1f26f1, h9degb1f26f2, k);
}
function q7cad0d5d91(h9degb1f26f0, h9degb1f26f1, h9degb1f26f2, k) {
    var rk = [28, 29, 36, 19, 11, 35, 32, 20, 10, 28, 29, 36, 19, 11, 35, 32, 20, 10, 28, 29, 36, 19, 11, 35, 32, 20, 10, 28, 29, 36, 19, 11, 35, 32, 20, 10, 28, 29, 36, 19, 11, 35, 32, 20, 10, 28, 29, 36, 19, 11, 35, 32, 20, 10, 28, 29];
    var k2 = [0x1e4e4d25, 0x544c4d0a];
    var lk = [0x1e4e4d25, 0x544c4d0a];
    var v = o0e0f26bdb45bf1.slice(0);
    for (var O = 0; O < 112; O++) {
        v[O] ^= 0x2b2c1503;
    }
    v[1] = (v[1] >>> (lk[1] % 16)) | (v[1] << (32 - (lk[1] % 16)));
    v[0] -= lk[0];
    v[3] = (v[3] << (lk[1] % 16)) | (v[3] >>> (32 - (lk[1] % 16)));
    v[2] = (v[2] << (lk[0] % 16)) | (v[2] >>> (32 - (lk[0] % 16)));
    v[5] = (v[5] >>> (lk[1] % 16)) | (v[5] << (32 - (lk[1] % 16)));
    v[4] += lk[0];
    v[7] = (v[7] >>> (lk[1] % 16)) | (v[7] << (32 - (lk[1] % 16)));
    v[6] ^= lk[0];
    v[9] = (v[9] >>> (lk[1] % 16)) | (v[9] << (32 - (lk[1] % 16)));
    v[8] = (v[8] << (lk[0] % 16)) | (v[8] >>> (32 - (lk[0] % 16)));
    v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
    v[10] = (v[10] << (lk[0] % 16)) | (v[10] >>> (32 - (lk[0] % 16)));
    v[13] -= lk[1];
    v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
    v[15] ^= lk[1];
    v[14] += lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] = (v[19] >>> (lk[1] % 16)) | (v[19] << (32 - (lk[1] % 16)));
    v[18] -= lk[0];
    v[21] = (v[21] << (lk[1] % 16)) | (v[21] >>> (32 - (lk[1] % 16)));
    v[20] = (v[20] << (lk[0] % 16)) | (v[20] >>> (32 - (lk[0] % 16)));
    v[23] = (v[23] >>> (lk[1] % 16)) | (v[23] << (32 - (lk[1] % 16)));
    v[22] += lk[0];
    v[25] = (v[25] >>> (lk[1] % 16)) | (v[25] << (32 - (lk[1] % 16)));
    v[24] ^= lk[0];
    v[27] = (v[27] >>> (lk[1] % 16)) | (v[27] << (32 - (lk[1] % 16)));
    v[26] = (v[26] << (lk[0] % 16)) | (v[26] >>> (32 - (lk[0] % 16)));
    v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
    v[28] = (v[28] << (lk[0] % 16)) | (v[28] >>> (32 - (lk[0] % 16)));
    v[31] -= lk[1];
    v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
    v[33] ^= lk[1];
    v[32] += lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] = (v[37] >>> (lk[1] % 16)) | (v[37] << (32 - (lk[1] % 16)));
    v[36] -= lk[0];
    v[39] = (v[39] << (lk[1] % 16)) | (v[39] >>> (32 - (lk[1] % 16)));
    v[38] = (v[38] << (lk[0] % 16)) | (v[38] >>> (32 - (lk[0] % 16)));
    v[41] = (v[41] >>> (lk[1] % 16)) | (v[41] << (32 - (lk[1] % 16)));
    v[40] += lk[0];
    v[43] = (v[43] >>> (lk[1] % 16)) | (v[43] << (32 - (lk[1] % 16)));
    v[42] ^= lk[0];
    v[45] = (v[45] >>> (lk[1] % 16)) | (v[45] << (32 - (lk[1] % 16)));
    v[44] = (v[44] << (lk[0] % 16)) | (v[44] >>> (32 - (lk[0] % 16)));
    v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
    v[46] = (v[46] << (lk[0] % 16)) | (v[46] >>> (32 - (lk[0] % 16)));
    v[49] -= lk[1];
    v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
    v[51] ^= lk[1];
    v[50] += lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] = (v[55] >>> (lk[1] % 16)) | (v[55] << (32 - (lk[1] % 16)));
    v[54] -= lk[0];
    v[57] = (v[57] << (lk[1] % 16)) | (v[57] >>> (32 - (lk[1] % 16)));
    v[56] = (v[56] << (lk[0] % 16)) | (v[56] >>> (32 - (lk[0] % 16)));
    v[59] = (v[59] >>> (lk[1] % 16)) | (v[59] << (32 - (lk[1] % 16)));
    v[58] += lk[0];
    v[61] = (v[61] >>> (lk[1] % 16)) | (v[61] << (32 - (lk[1] % 16)));
    v[60] ^= lk[0];
    v[63] = (v[63] >>> (lk[1] % 16)) | (v[63] << (32 - (lk[1] % 16)));
    v[62] = (v[62] << (lk[0] % 16)) | (v[62] >>> (32 - (lk[0] % 16)));
    v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
    v[64] = (v[64] << (lk[0] % 16)) | (v[64] >>> (32 - (lk[0] % 16)));
    v[67] -= lk[1];
    v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
    v[69] ^= lk[1];
    v[68] += lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] = (v[73] >>> (lk[1] % 16)) | (v[73] << (32 - (lk[1] % 16)));
    v[72] -= lk[0];
    v[75] = (v[75] << (lk[1] % 16)) | (v[75] >>> (32 - (lk[1] % 16)));
    v[74] = (v[74] << (lk[0] % 16)) | (v[74] >>> (32 - (lk[0] % 16)));
    v[77] = (v[77] >>> (lk[1] % 16)) | (v[77] << (32 - (lk[1] % 16)));
    v[76] += lk[0];
    v[79] = (v[79] >>> (lk[1] % 16)) | (v[79] << (32 - (lk[1] % 16)));
    v[78] ^= lk[0];
    v[81] = (v[81] >>> (lk[1] % 16)) | (v[81] << (32 - (lk[1] % 16)));
    v[80] = (v[80] << (lk[0] % 16)) | (v[80] >>> (32 - (lk[0] % 16)));
    v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
    v[82] = (v[82] << (lk[0] % 16)) | (v[82] >>> (32 - (lk[0] % 16)));
    v[85] -= lk[1];
    v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
    v[87] ^= lk[1];
    v[86] += lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] = (v[91] >>> (lk[1] % 16)) | (v[91] << (32 - (lk[1] % 16)));
    v[90] -= lk[0];
    v[93] = (v[93] << (lk[1] % 16)) | (v[93] >>> (32 - (lk[1] % 16)));
    v[92] = (v[92] << (lk[0] % 16)) | (v[92] >>> (32 - (lk[0] % 16)));
    v[95] = (v[95] >>> (lk[1] % 16)) | (v[95] << (32 - (lk[1] % 16)));
    v[94] += lk[0];
    v[97] = (v[97] >>> (lk[1] % 16)) | (v[97] << (32 - (lk[1] % 16)));
    v[96] ^= lk[0];
    v[99] = (v[99] >>> (lk[1] % 16)) | (v[99] << (32 - (lk[1] % 16)));
    v[98] = (v[98] << (lk[0] % 16)) | (v[98] >>> (32 - (lk[0] % 16)));
    v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
    v[100] = (v[100] << (lk[0] % 16)) | (v[100] >>> (32 - (lk[0] % 16)));
    v[103] -= lk[1];
    v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)));
    v[105] ^= lk[1];
    v[104] += lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] = (v[109] >>> (lk[1] % 16)) | (v[109] << (32 - (lk[1] % 16)));
    v[108] -= lk[0];
    v[111] = (v[111] << (lk[1] % 16)) | (v[111] >>> (32 - (lk[1] % 16)));
    v[110] = (v[110] << (lk[0] % 16)) | (v[110] >>> (32 - (lk[0] % 16)));
    for (var I = 0; I < 112; I += 2) {
        var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 111; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x2b2c1503;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(h9degb1f26f0, h9degb1f26f1, h9degb1f26f2, k);
}
function q7cad0d5d92(h9degb1f26f0, h9degb1f26f1, h9degb1f26f2, k) {
    var rk = [38, 37, 16, 37, 33, 31, 21, 28, 10, 38, 37, 16, 37, 33, 31, 21, 28, 10, 38, 37, 16, 37, 33, 31, 21, 28, 10, 38, 37, 16, 37, 33, 31, 21, 28, 10, 38, 37, 16, 37, 33, 31, 21, 28, 10, 38, 37, 16, 37, 33, 31, 21, 28, 10, 38, 37, 16, 37, 33, 31, 21, 28, 10, 38, 37, 16];
    var k2 = [0x40cefda0, 0x4a3ccbc5];
    var lk = [0x40cefda0, 0x4a3ccbc5];
    var v = o0e0f26bdb45bf2.slice(0);
    for (var O = 0; O < 132; O++) {
        v[O] ^= 0x183bcb23;
    }
    v[1] = (v[1] >>> (lk[1] % 16)) | (v[1] << (32 - (lk[1] % 16)));
    v[0] = (v[0] << (lk[0] % 16)) | (v[0] >>> (32 - (lk[0] % 16)));
    v[3] ^= lk[1];
    v[2] = (v[2] << (lk[0] % 16)) | (v[2] >>> (32 - (lk[0] % 16)));
    v[5] -= lk[1];
    v[4] += lk[0];
    v[7] += lk[1];
    v[6] += lk[0];
    v[9] -= lk[1];
    v[8] -= lk[0];
    v[11] = (v[11] >>> (lk[1] % 16)) | (v[11] << (32 - (lk[1] % 16)));
    v[10] = (v[10] << (lk[0] % 16)) | (v[10] >>> (32 - (lk[0] % 16)));
    v[13] += lk[1];
    v[12] = (v[12] << (lk[0] % 16)) | (v[12] >>> (32 - (lk[0] % 16)));
    v[15] += lk[1];
    v[14] = (v[14] >>> (lk[0] % 16)) | (v[14] << (32 - (lk[0] % 16)));
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] = (v[19] >>> (lk[1] % 16)) | (v[19] << (32 - (lk[1] % 16)));
    v[18] = (v[18] << (lk[0] % 16)) | (v[18] >>> (32 - (lk[0] % 16)));
    v[21] ^= lk[1];
    v[20] = (v[20] << (lk[0] % 16)) | (v[20] >>> (32 - (lk[0] % 16)));
    v[23] -= lk[1];
    v[22] += lk[0];
    v[25] += lk[1];
    v[24] += lk[0];
    v[27] -= lk[1];
    v[26] -= lk[0];
    v[29] = (v[29] >>> (lk[1] % 16)) | (v[29] << (32 - (lk[1] % 16)));
    v[28] = (v[28] << (lk[0] % 16)) | (v[28] >>> (32 - (lk[0] % 16)));
    v[31] += lk[1];
    v[30] = (v[30] << (lk[0] % 16)) | (v[30] >>> (32 - (lk[0] % 16)));
    v[33] += lk[1];
    v[32] = (v[32] >>> (lk[0] % 16)) | (v[32] << (32 - (lk[0] % 16)));
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] = (v[37] >>> (lk[1] % 16)) | (v[37] << (32 - (lk[1] % 16)));
    v[36] = (v[36] << (lk[0] % 16)) | (v[36] >>> (32 - (lk[0] % 16)));
    v[39] ^= lk[1];
    v[38] = (v[38] << (lk[0] % 16)) | (v[38] >>> (32 - (lk[0] % 16)));
    v[41] -= lk[1];
    v[40] += lk[0];
    v[43] += lk[1];
    v[42] += lk[0];
    v[45] -= lk[1];
    v[44] -= lk[0];
    v[47] = (v[47] >>> (lk[1] % 16)) | (v[47] << (32 - (lk[1] % 16)));
    v[46] = (v[46] << (lk[0] % 16)) | (v[46] >>> (32 - (lk[0] % 16)));
    v[49] += lk[1];
    v[48] = (v[48] << (lk[0] % 16)) | (v[48] >>> (32 - (lk[0] % 16)));
    v[51] += lk[1];
    v[50] = (v[50] >>> (lk[0] % 16)) | (v[50] << (32 - (lk[0] % 16)));
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] = (v[55] >>> (lk[1] % 16)) | (v[55] << (32 - (lk[1] % 16)));
    v[54] = (v[54] << (lk[0] % 16)) | (v[54] >>> (32 - (lk[0] % 16)));
    v[57] ^= lk[1];
    v[56] = (v[56] << (lk[0] % 16)) | (v[56] >>> (32 - (lk[0] % 16)));
    v[59] -= lk[1];
    v[58] += lk[0];
    v[61] += lk[1];
    v[60] += lk[0];
    v[63] -= lk[1];
    v[62] -= lk[0];
    v[65] = (v[65] >>> (lk[1] % 16)) | (v[65] << (32 - (lk[1] % 16)));
    v[64] = (v[64] << (lk[0] % 16)) | (v[64] >>> (32 - (lk[0] % 16)));
    v[67] += lk[1];
    v[66] = (v[66] << (lk[0] % 16)) | (v[66] >>> (32 - (lk[0] % 16)));
    v[69] += lk[1];
    v[68] = (v[68] >>> (lk[0] % 16)) | (v[68] << (32 - (lk[0] % 16)));
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] = (v[73] >>> (lk[1] % 16)) | (v[73] << (32 - (lk[1] % 16)));
    v[72] = (v[72] << (lk[0] % 16)) | (v[72] >>> (32 - (lk[0] % 16)));
    v[75] ^= lk[1];
    v[74] = (v[74] << (lk[0] % 16)) | (v[74] >>> (32 - (lk[0] % 16)));
    v[77] -= lk[1];
    v[76] += lk[0];
    v[79] += lk[1];
    v[78] += lk[0];
    v[81] -= lk[1];
    v[80] -= lk[0];
    v[83] = (v[83] >>> (lk[1] % 16)) | (v[83] << (32 - (lk[1] % 16)));
    v[82] = (v[82] << (lk[0] % 16)) | (v[82] >>> (32 - (lk[0] % 16)));
    v[85] += lk[1];
    v[84] = (v[84] << (lk[0] % 16)) | (v[84] >>> (32 - (lk[0] % 16)));
    v[87] += lk[1];
    v[86] = (v[86] >>> (lk[0] % 16)) | (v[86] << (32 - (lk[0] % 16)));
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] = (v[91] >>> (lk[1] % 16)) | (v[91] << (32 - (lk[1] % 16)));
    v[90] = (v[90] << (lk[0] % 16)) | (v[90] >>> (32 - (lk[0] % 16)));
    v[93] ^= lk[1];
    v[92] = (v[92] << (lk[0] % 16)) | (v[92] >>> (32 - (lk[0] % 16)));
    v[95] -= lk[1];
    v[94] += lk[0];
    v[97] += lk[1];
    v[96] += lk[0];
    v[99] -= lk[1];
    v[98] -= lk[0];
    v[101] = (v[101] >>> (lk[1] % 16)) | (v[101] << (32 - (lk[1] % 16)));
    v[100] = (v[100] << (lk[0] % 16)) | (v[100] >>> (32 - (lk[0] % 16)));
    v[103] += lk[1];
    v[102] = (v[102] << (lk[0] % 16)) | (v[102] >>> (32 - (lk[0] % 16)));
    v[105] += lk[1];
    v[104] = (v[104] >>> (lk[0] % 16)) | (v[104] << (32 - (lk[0] % 16)));
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] = (v[109] >>> (lk[1] % 16)) | (v[109] << (32 - (lk[1] % 16)));
    v[108] = (v[108] << (lk[0] % 16)) | (v[108] >>> (32 - (lk[0] % 16)));
    v[111] ^= lk[1];
    v[110] = (v[110] << (lk[0] % 16)) | (v[110] >>> (32 - (lk[0] % 16)));
    v[113] -= lk[1];
    v[112] += lk[0];
    v[115] += lk[1];
    v[114] += lk[0];
    v[117] -= lk[1];
    v[116] -= lk[0];
    v[119] = (v[119] >>> (lk[1] % 16)) | (v[119] << (32 - (lk[1] % 16)));
    v[118] = (v[118] << (lk[0] % 16)) | (v[118] >>> (32 - (lk[0] % 16)));
    v[121] += lk[1];
    v[120] = (v[120] << (lk[0] % 16)) | (v[120] >>> (32 - (lk[0] % 16)));
    v[123] += lk[1];
    v[122] = (v[122] >>> (lk[0] % 16)) | (v[122] << (32 - (lk[0] % 16)));
    v[125] -= lk[1];
    v[124] -= lk[0];
    v[127] = (v[127] >>> (lk[1] % 16)) | (v[127] << (32 - (lk[1] % 16)));
    v[126] = (v[126] << (lk[0] % 16)) | (v[126] >>> (32 - (lk[0] % 16)));
    v[129] ^= lk[1];
    v[128] = (v[128] << (lk[0] % 16)) | (v[128] >>> (32 - (lk[0] % 16)));
    v[131] -= lk[1];
    v[130] += lk[0];
    for (var I = 0; I < 132; I += 2) {
        var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 131; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x183bcb23;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(h9degb1f26f0, h9degb1f26f1, h9degb1f26f2, k);
}
function q7cad0d5d93(h9degb1f26f0, h9degb1f26f1, h9degb1f26f2, k) {
    var rk = [16, 34, 40, 39, 13, 20, 17, 25, 10, 16, 34, 40, 39, 13, 20, 17, 25, 10, 16, 34, 40, 39, 13, 20, 17, 25, 10, 16, 34, 40, 39, 13, 20, 17, 25, 10, 16, 34, 40, 39, 13, 20, 17, 25, 10, 16, 34, 40, 39, 13, 20, 17, 25, 10, 16, 34, 40, 39, 13];
    var k2 = [0x3a831d50, 0x429b09ec];
    var lk = [0x3a831d50, 0x429b09ec];
    var v = o0e0f26bdb45bf3.slice(0);
    for (var O = 0; O < 118; O++) {
        v[O] ^= 0x5df9fbc8;
    }
    v[1] = (v[1] >>> (lk[1] % 16)) | (v[1] << (32 - (lk[1] % 16)));
    v[0] = (v[0] << (lk[0] % 16)) | (v[0] >>> (32 - (lk[0] % 16)));
    v[3] ^= lk[1];
    v[2] -= lk[0];
    v[5] ^= lk[1];
    v[4] -= lk[0];
    v[7] = (v[7] >>> (lk[1] % 16)) | (v[7] << (32 - (lk[1] % 16)));
    v[6] = (v[6] >>> (lk[0] % 16)) | (v[6] << (32 - (lk[0] % 16)));
    v[9] ^= lk[1];
    v[8] ^= lk[0];
    v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
    v[10] += lk[0];
    v[13] ^= lk[1];
    v[12] = (v[12] << (lk[0] % 16)) | (v[12] >>> (32 - (lk[0] % 16)));
    v[15] ^= lk[1];
    v[14] = (v[14] >>> (lk[0] % 16)) | (v[14] << (32 - (lk[0] % 16)));
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] = (v[19] >>> (lk[1] % 16)) | (v[19] << (32 - (lk[1] % 16)));
    v[18] = (v[18] << (lk[0] % 16)) | (v[18] >>> (32 - (lk[0] % 16)));
    v[21] ^= lk[1];
    v[20] -= lk[0];
    v[23] ^= lk[1];
    v[22] -= lk[0];
    v[25] = (v[25] >>> (lk[1] % 16)) | (v[25] << (32 - (lk[1] % 16)));
    v[24] = (v[24] >>> (lk[0] % 16)) | (v[24] << (32 - (lk[0] % 16)));
    v[27] ^= lk[1];
    v[26] ^= lk[0];
    v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
    v[28] += lk[0];
    v[31] ^= lk[1];
    v[30] = (v[30] << (lk[0] % 16)) | (v[30] >>> (32 - (lk[0] % 16)));
    v[33] ^= lk[1];
    v[32] = (v[32] >>> (lk[0] % 16)) | (v[32] << (32 - (lk[0] % 16)));
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] = (v[37] >>> (lk[1] % 16)) | (v[37] << (32 - (lk[1] % 16)));
    v[36] = (v[36] << (lk[0] % 16)) | (v[36] >>> (32 - (lk[0] % 16)));
    v[39] ^= lk[1];
    v[38] -= lk[0];
    v[41] ^= lk[1];
    v[40] -= lk[0];
    v[43] = (v[43] >>> (lk[1] % 16)) | (v[43] << (32 - (lk[1] % 16)));
    v[42] = (v[42] >>> (lk[0] % 16)) | (v[42] << (32 - (lk[0] % 16)));
    v[45] ^= lk[1];
    v[44] ^= lk[0];
    v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
    v[46] += lk[0];
    v[49] ^= lk[1];
    v[48] = (v[48] << (lk[0] % 16)) | (v[48] >>> (32 - (lk[0] % 16)));
    v[51] ^= lk[1];
    v[50] = (v[50] >>> (lk[0] % 16)) | (v[50] << (32 - (lk[0] % 16)));
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] = (v[55] >>> (lk[1] % 16)) | (v[55] << (32 - (lk[1] % 16)));
    v[54] = (v[54] << (lk[0] % 16)) | (v[54] >>> (32 - (lk[0] % 16)));
    v[57] ^= lk[1];
    v[56] -= lk[0];
    v[59] ^= lk[1];
    v[58] -= lk[0];
    v[61] = (v[61] >>> (lk[1] % 16)) | (v[61] << (32 - (lk[1] % 16)));
    v[60] = (v[60] >>> (lk[0] % 16)) | (v[60] << (32 - (lk[0] % 16)));
    v[63] ^= lk[1];
    v[62] ^= lk[0];
    v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
    v[64] += lk[0];
    v[67] ^= lk[1];
    v[66] = (v[66] << (lk[0] % 16)) | (v[66] >>> (32 - (lk[0] % 16)));
    v[69] ^= lk[1];
    v[68] = (v[68] >>> (lk[0] % 16)) | (v[68] << (32 - (lk[0] % 16)));
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] = (v[73] >>> (lk[1] % 16)) | (v[73] << (32 - (lk[1] % 16)));
    v[72] = (v[72] << (lk[0] % 16)) | (v[72] >>> (32 - (lk[0] % 16)));
    v[75] ^= lk[1];
    v[74] -= lk[0];
    v[77] ^= lk[1];
    v[76] -= lk[0];
    v[79] = (v[79] >>> (lk[1] % 16)) | (v[79] << (32 - (lk[1] % 16)));
    v[78] = (v[78] >>> (lk[0] % 16)) | (v[78] << (32 - (lk[0] % 16)));
    v[81] ^= lk[1];
    v[80] ^= lk[0];
    v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
    v[82] += lk[0];
    v[85] ^= lk[1];
    v[84] = (v[84] << (lk[0] % 16)) | (v[84] >>> (32 - (lk[0] % 16)));
    v[87] ^= lk[1];
    v[86] = (v[86] >>> (lk[0] % 16)) | (v[86] << (32 - (lk[0] % 16)));
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] = (v[91] >>> (lk[1] % 16)) | (v[91] << (32 - (lk[1] % 16)));
    v[90] = (v[90] << (lk[0] % 16)) | (v[90] >>> (32 - (lk[0] % 16)));
    v[93] ^= lk[1];
    v[92] -= lk[0];
    v[95] ^= lk[1];
    v[94] -= lk[0];
    v[97] = (v[97] >>> (lk[1] % 16)) | (v[97] << (32 - (lk[1] % 16)));
    v[96] = (v[96] >>> (lk[0] % 16)) | (v[96] << (32 - (lk[0] % 16)));
    v[99] ^= lk[1];
    v[98] ^= lk[0];
    v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
    v[100] += lk[0];
    v[103] ^= lk[1];
    v[102] = (v[102] << (lk[0] % 16)) | (v[102] >>> (32 - (lk[0] % 16)));
    v[105] ^= lk[1];
    v[104] = (v[104] >>> (lk[0] % 16)) | (v[104] << (32 - (lk[0] % 16)));
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] = (v[109] >>> (lk[1] % 16)) | (v[109] << (32 - (lk[1] % 16)));
    v[108] = (v[108] << (lk[0] % 16)) | (v[108] >>> (32 - (lk[0] % 16)));
    v[111] ^= lk[1];
    v[110] -= lk[0];
    v[113] ^= lk[1];
    v[112] -= lk[0];
    v[115] = (v[115] >>> (lk[1] % 16)) | (v[115] << (32 - (lk[1] % 16)));
    v[114] = (v[114] >>> (lk[0] % 16)) | (v[114] << (32 - (lk[0] % 16)));
    v[117] ^= lk[1];
    v[116] ^= lk[0];
    for (var I = 0; I < 118; I += 2) {
        var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 117; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x5df9fbc8;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(h9degb1f26f0, h9degb1f26f1, h9degb1f26f2, k);
}
function q7cad0d5d94(h9degb1f26f0, h9degb1f26f1, h9degb1f26f2, k) {
    var rk = [31, 10, 26, 40, 40, 16, 15, 30, 10, 31, 10, 26, 40, 40, 16, 15, 30, 10, 31, 10, 26, 40, 40, 16, 15, 30, 10, 31, 10, 26, 40, 40, 16, 15, 30, 10, 31, 10, 26, 40, 40, 16, 15, 30, 10, 31, 10, 26, 40, 40, 16, 15, 30, 10, 31, 10, 26, 40, 40, 16, 15, 30, 10, 31, 10, 26, 40, 40];
    var k2 = [0x272fe915, 0x7466bb3d];
    var lk = [0x272fe915, 0x7466bb3d];
    var v = o0e0f26bdb45bf4.slice(0);
    for (var O = 0; O < 136; O++) {
        v[O] ^= 0x2b4a2618;
    }
    v[1] += lk[1];
    v[0] += lk[0];
    v[3] = (v[3] >>> (lk[1] % 16)) | (v[3] << (32 - (lk[1] % 16)));
    v[2] = (v[2] >>> (lk[0] % 16)) | (v[2] << (32 - (lk[0] % 16)));
    v[5] -= lk[1];
    v[4] ^= lk[0];
    v[7] = (v[7] << (lk[1] % 16)) | (v[7] >>> (32 - (lk[1] % 16)));
    v[6] -= lk[0];
    v[9] ^= lk[1];
    v[8] -= lk[0];
    v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
    v[10] -= lk[0];
    v[13] = (v[13] >>> (lk[1] % 16)) | (v[13] << (32 - (lk[1] % 16)));
    v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
    v[15] ^= lk[1];
    v[14] -= lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] += lk[1];
    v[18] += lk[0];
    v[21] = (v[21] >>> (lk[1] % 16)) | (v[21] << (32 - (lk[1] % 16)));
    v[20] = (v[20] >>> (lk[0] % 16)) | (v[20] << (32 - (lk[0] % 16)));
    v[23] -= lk[1];
    v[22] ^= lk[0];
    v[25] = (v[25] << (lk[1] % 16)) | (v[25] >>> (32 - (lk[1] % 16)));
    v[24] -= lk[0];
    v[27] ^= lk[1];
    v[26] -= lk[0];
    v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
    v[28] -= lk[0];
    v[31] = (v[31] >>> (lk[1] % 16)) | (v[31] << (32 - (lk[1] % 16)));
    v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
    v[33] ^= lk[1];
    v[32] -= lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] += lk[1];
    v[36] += lk[0];
    v[39] = (v[39] >>> (lk[1] % 16)) | (v[39] << (32 - (lk[1] % 16)));
    v[38] = (v[38] >>> (lk[0] % 16)) | (v[38] << (32 - (lk[0] % 16)));
    v[41] -= lk[1];
    v[40] ^= lk[0];
    v[43] = (v[43] << (lk[1] % 16)) | (v[43] >>> (32 - (lk[1] % 16)));
    v[42] -= lk[0];
    v[45] ^= lk[1];
    v[44] -= lk[0];
    v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
    v[46] -= lk[0];
    v[49] = (v[49] >>> (lk[1] % 16)) | (v[49] << (32 - (lk[1] % 16)));
    v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
    v[51] ^= lk[1];
    v[50] -= lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] += lk[1];
    v[54] += lk[0];
    v[57] = (v[57] >>> (lk[1] % 16)) | (v[57] << (32 - (lk[1] % 16)));
    v[56] = (v[56] >>> (lk[0] % 16)) | (v[56] << (32 - (lk[0] % 16)));
    v[59] -= lk[1];
    v[58] ^= lk[0];
    v[61] = (v[61] << (lk[1] % 16)) | (v[61] >>> (32 - (lk[1] % 16)));
    v[60] -= lk[0];
    v[63] ^= lk[1];
    v[62] -= lk[0];
    v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
    v[64] -= lk[0];
    v[67] = (v[67] >>> (lk[1] % 16)) | (v[67] << (32 - (lk[1] % 16)));
    v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
    v[69] ^= lk[1];
    v[68] -= lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] += lk[1];
    v[72] += lk[0];
    v[75] = (v[75] >>> (lk[1] % 16)) | (v[75] << (32 - (lk[1] % 16)));
    v[74] = (v[74] >>> (lk[0] % 16)) | (v[74] << (32 - (lk[0] % 16)));
    v[77] -= lk[1];
    v[76] ^= lk[0];
    v[79] = (v[79] << (lk[1] % 16)) | (v[79] >>> (32 - (lk[1] % 16)));
    v[78] -= lk[0];
    v[81] ^= lk[1];
    v[80] -= lk[0];
    v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
    v[82] -= lk[0];
    v[85] = (v[85] >>> (lk[1] % 16)) | (v[85] << (32 - (lk[1] % 16)));
    v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
    v[87] ^= lk[1];
    v[86] -= lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] += lk[1];
    v[90] += lk[0];
    v[93] = (v[93] >>> (lk[1] % 16)) | (v[93] << (32 - (lk[1] % 16)));
    v[92] = (v[92] >>> (lk[0] % 16)) | (v[92] << (32 - (lk[0] % 16)));
    v[95] -= lk[1];
    v[94] ^= lk[0];
    v[97] = (v[97] << (lk[1] % 16)) | (v[97] >>> (32 - (lk[1] % 16)));
    v[96] -= lk[0];
    v[99] ^= lk[1];
    v[98] -= lk[0];
    v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
    v[100] -= lk[0];
    v[103] = (v[103] >>> (lk[1] % 16)) | (v[103] << (32 - (lk[1] % 16)));
    v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)));
    v[105] ^= lk[1];
    v[104] -= lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] += lk[1];
    v[108] += lk[0];
    v[111] = (v[111] >>> (lk[1] % 16)) | (v[111] << (32 - (lk[1] % 16)));
    v[110] = (v[110] >>> (lk[0] % 16)) | (v[110] << (32 - (lk[0] % 16)));
    v[113] -= lk[1];
    v[112] ^= lk[0];
    v[115] = (v[115] << (lk[1] % 16)) | (v[115] >>> (32 - (lk[1] % 16)));
    v[114] -= lk[0];
    v[117] ^= lk[1];
    v[116] -= lk[0];
    v[119] = (v[119] << (lk[1] % 16)) | (v[119] >>> (32 - (lk[1] % 16)));
    v[118] -= lk[0];
    v[121] = (v[121] >>> (lk[1] % 16)) | (v[121] << (32 - (lk[1] % 16)));
    v[120] = (v[120] >>> (lk[0] % 16)) | (v[120] << (32 - (lk[0] % 16)));
    v[123] ^= lk[1];
    v[122] -= lk[0];
    v[125] -= lk[1];
    v[124] -= lk[0];
    v[127] += lk[1];
    v[126] += lk[0];
    v[129] = (v[129] >>> (lk[1] % 16)) | (v[129] << (32 - (lk[1] % 16)));
    v[128] = (v[128] >>> (lk[0] % 16)) | (v[128] << (32 - (lk[0] % 16)));
    v[131] -= lk[1];
    v[130] ^= lk[0];
    v[133] = (v[133] << (lk[1] % 16)) | (v[133] >>> (32 - (lk[1] % 16)));
    v[132] -= lk[0];
    v[135] ^= lk[1];
    v[134] -= lk[0];
    for (var I = 0; I < 136; I += 2) {
        var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 135; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x2b4a2618;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(h9degb1f26f0, h9degb1f26f1, h9degb1f26f2, k);
}
function ub98484234(s457bd522c3e350, s457bd522c3e351, s457bd522c3e352) {
    var rk = [40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40, 20, 21, 25, 27, 25, 27, 35, 10, 40];
    var k2 = [0x1ed4b261, 0x71a9e409];
    var lk = [0x1ed4b261, 0x71a9e409];
    var v = s457bd522c3e35.slice(0);
    var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
    for (var O = 0; O < 362; O++) {
        v[O] ^= 0x19ae28fe;
    }
    v[1] ^= lk[1];
    v[0] -= lk[0];
    v[3] += lk[1];
    v[2] = (v[2] >>> (lk[0] % 16)) | (v[2] << (32 - (lk[0] % 16)));
    v[5] -= lk[1];
    v[4] ^= lk[0];
    v[7] ^= lk[1];
    v[6] -= lk[0];
    v[9] ^= lk[1];
    v[8] += lk[0];
    v[11] = (v[11] >>> (lk[1] % 16)) | (v[11] << (32 - (lk[1] % 16)));
    v[10] = (v[10] << (lk[0] % 16)) | (v[10] >>> (32 - (lk[0] % 16)));
    v[13] = (v[13] << (lk[1] % 16)) | (v[13] >>> (32 - (lk[1] % 16)));
    v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
    v[15] -= lk[1];
    v[14] ^= lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] ^= lk[1];
    v[18] -= lk[0];
    v[21] += lk[1];
    v[20] = (v[20] >>> (lk[0] % 16)) | (v[20] << (32 - (lk[0] % 16)));
    v[23] -= lk[1];
    v[22] ^= lk[0];
    v[25] ^= lk[1];
    v[24] -= lk[0];
    v[27] ^= lk[1];
    v[26] += lk[0];
    v[29] = (v[29] >>> (lk[1] % 16)) | (v[29] << (32 - (lk[1] % 16)));
    v[28] = (v[28] << (lk[0] % 16)) | (v[28] >>> (32 - (lk[0] % 16)));
    v[31] = (v[31] << (lk[1] % 16)) | (v[31] >>> (32 - (lk[1] % 16)));
    v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
    v[33] -= lk[1];
    v[32] ^= lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] ^= lk[1];
    v[36] -= lk[0];
    v[39] += lk[1];
    v[38] = (v[38] >>> (lk[0] % 16)) | (v[38] << (32 - (lk[0] % 16)));
    v[41] -= lk[1];
    v[40] ^= lk[0];
    v[43] ^= lk[1];
    v[42] -= lk[0];
    v[45] ^= lk[1];
    v[44] += lk[0];
    v[47] = (v[47] >>> (lk[1] % 16)) | (v[47] << (32 - (lk[1] % 16)));
    v[46] = (v[46] << (lk[0] % 16)) | (v[46] >>> (32 - (lk[0] % 16)));
    v[49] = (v[49] << (lk[1] % 16)) | (v[49] >>> (32 - (lk[1] % 16)));
    v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
    v[51] -= lk[1];
    v[50] ^= lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] ^= lk[1];
    v[54] -= lk[0];
    v[57] += lk[1];
    v[56] = (v[56] >>> (lk[0] % 16)) | (v[56] << (32 - (lk[0] % 16)));
    v[59] -= lk[1];
    v[58] ^= lk[0];
    v[61] ^= lk[1];
    v[60] -= lk[0];
    v[63] ^= lk[1];
    v[62] += lk[0];
    v[65] = (v[65] >>> (lk[1] % 16)) | (v[65] << (32 - (lk[1] % 16)));
    v[64] = (v[64] << (lk[0] % 16)) | (v[64] >>> (32 - (lk[0] % 16)));
    v[67] = (v[67] << (lk[1] % 16)) | (v[67] >>> (32 - (lk[1] % 16)));
    v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
    v[69] -= lk[1];
    v[68] ^= lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] ^= lk[1];
    v[72] -= lk[0];
    v[75] += lk[1];
    v[74] = (v[74] >>> (lk[0] % 16)) | (v[74] << (32 - (lk[0] % 16)));
    v[77] -= lk[1];
    v[76] ^= lk[0];
    v[79] ^= lk[1];
    v[78] -= lk[0];
    v[81] ^= lk[1];
    v[80] += lk[0];
    v[83] = (v[83] >>> (lk[1] % 16)) | (v[83] << (32 - (lk[1] % 16)));
    v[82] = (v[82] << (lk[0] % 16)) | (v[82] >>> (32 - (lk[0] % 16)));
    v[85] = (v[85] << (lk[1] % 16)) | (v[85] >>> (32 - (lk[1] % 16)));
    v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
    v[87] -= lk[1];
    v[86] ^= lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] ^= lk[1];
    v[90] -= lk[0];
    v[93] += lk[1];
    v[92] = (v[92] >>> (lk[0] % 16)) | (v[92] << (32 - (lk[0] % 16)));
    v[95] -= lk[1];
    v[94] ^= lk[0];
    v[97] ^= lk[1];
    v[96] -= lk[0];
    v[99] ^= lk[1];
    v[98] += lk[0];
    v[101] = (v[101] >>> (lk[1] % 16)) | (v[101] << (32 - (lk[1] % 16)));
    v[100] = (v[100] << (lk[0] % 16)) | (v[100] >>> (32 - (lk[0] % 16)));
    v[103] = (v[103] << (lk[1] % 16)) | (v[103] >>> (32 - (lk[1] % 16)));
    v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)));
    v[105] -= lk[1];
    v[104] ^= lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] ^= lk[1];
    v[108] -= lk[0];
    v[111] += lk[1];
    v[110] = (v[110] >>> (lk[0] % 16)) | (v[110] << (32 - (lk[0] % 16)));
    v[113] -= lk[1];
    v[112] ^= lk[0];
    v[115] ^= lk[1];
    v[114] -= lk[0];
    v[117] ^= lk[1];
    v[116] += lk[0];
    v[119] = (v[119] >>> (lk[1] % 16)) | (v[119] << (32 - (lk[1] % 16)));
    v[118] = (v[118] << (lk[0] % 16)) | (v[118] >>> (32 - (lk[0] % 16)));
    v[121] = (v[121] << (lk[1] % 16)) | (v[121] >>> (32 - (lk[1] % 16)));
    v[120] = (v[120] >>> (lk[0] % 16)) | (v[120] << (32 - (lk[0] % 16)));
    v[123] -= lk[1];
    v[122] ^= lk[0];
    v[125] -= lk[1];
    v[124] -= lk[0];
    v[127] ^= lk[1];
    v[126] -= lk[0];
    v[129] += lk[1];
    v[128] = (v[128] >>> (lk[0] % 16)) | (v[128] << (32 - (lk[0] % 16)));
    v[131] -= lk[1];
    v[130] ^= lk[0];
    v[133] ^= lk[1];
    v[132] -= lk[0];
    v[135] ^= lk[1];
    v[134] += lk[0];
    v[137] = (v[137] >>> (lk[1] % 16)) | (v[137] << (32 - (lk[1] % 16)));
    v[136] = (v[136] << (lk[0] % 16)) | (v[136] >>> (32 - (lk[0] % 16)));
    v[139] = (v[139] << (lk[1] % 16)) | (v[139] >>> (32 - (lk[1] % 16)));
    v[138] = (v[138] >>> (lk[0] % 16)) | (v[138] << (32 - (lk[0] % 16)));
    v[141] -= lk[1];
    v[140] ^= lk[0];
    v[143] -= lk[1];
    v[142] -= lk[0];
    v[145] ^= lk[1];
    v[144] -= lk[0];
    v[147] += lk[1];
    v[146] = (v[146] >>> (lk[0] % 16)) | (v[146] << (32 - (lk[0] % 16)));
    v[149] -= lk[1];
    v[148] ^= lk[0];
    v[151] ^= lk[1];
    v[150] -= lk[0];
    v[153] ^= lk[1];
    v[152] += lk[0];
    v[155] = (v[155] >>> (lk[1] % 16)) | (v[155] << (32 - (lk[1] % 16)));
    v[154] = (v[154] << (lk[0] % 16)) | (v[154] >>> (32 - (lk[0] % 16)));
    v[157] = (v[157] << (lk[1] % 16)) | (v[157] >>> (32 - (lk[1] % 16)));
    v[156] = (v[156] >>> (lk[0] % 16)) | (v[156] << (32 - (lk[0] % 16)));
    v[159] -= lk[1];
    v[158] ^= lk[0];
    v[161] -= lk[1];
    v[160] -= lk[0];
    v[163] ^= lk[1];
    v[162] -= lk[0];
    v[165] += lk[1];
    v[164] = (v[164] >>> (lk[0] % 16)) | (v[164] << (32 - (lk[0] % 16)));
    v[167] -= lk[1];
    v[166] ^= lk[0];
    v[169] ^= lk[1];
    v[168] -= lk[0];
    v[171] ^= lk[1];
    v[170] += lk[0];
    v[173] = (v[173] >>> (lk[1] % 16)) | (v[173] << (32 - (lk[1] % 16)));
    v[172] = (v[172] << (lk[0] % 16)) | (v[172] >>> (32 - (lk[0] % 16)));
    v[175] = (v[175] << (lk[1] % 16)) | (v[175] >>> (32 - (lk[1] % 16)));
    v[174] = (v[174] >>> (lk[0] % 16)) | (v[174] << (32 - (lk[0] % 16)));
    v[177] -= lk[1];
    v[176] ^= lk[0];
    v[179] -= lk[1];
    v[178] -= lk[0];
    v[181] ^= lk[1];
    v[180] -= lk[0];
    v[183] += lk[1];
    v[182] = (v[182] >>> (lk[0] % 16)) | (v[182] << (32 - (lk[0] % 16)));
    v[185] -= lk[1];
    v[184] ^= lk[0];
    v[187] ^= lk[1];
    v[186] -= lk[0];
    v[189] ^= lk[1];
    v[188] += lk[0];
    v[191] = (v[191] >>> (lk[1] % 16)) | (v[191] << (32 - (lk[1] % 16)));
    v[190] = (v[190] << (lk[0] % 16)) | (v[190] >>> (32 - (lk[0] % 16)));
    v[193] = (v[193] << (lk[1] % 16)) | (v[193] >>> (32 - (lk[1] % 16)));
    v[192] = (v[192] >>> (lk[0] % 16)) | (v[192] << (32 - (lk[0] % 16)));
    v[195] -= lk[1];
    v[194] ^= lk[0];
    v[197] -= lk[1];
    v[196] -= lk[0];
    v[199] ^= lk[1];
    v[198] -= lk[0];
    v[201] += lk[1];
    v[200] = (v[200] >>> (lk[0] % 16)) | (v[200] << (32 - (lk[0] % 16)));
    v[203] -= lk[1];
    v[202] ^= lk[0];
    v[205] ^= lk[1];
    v[204] -= lk[0];
    v[207] ^= lk[1];
    v[206] += lk[0];
    v[209] = (v[209] >>> (lk[1] % 16)) | (v[209] << (32 - (lk[1] % 16)));
    v[208] = (v[208] << (lk[0] % 16)) | (v[208] >>> (32 - (lk[0] % 16)));
    v[211] = (v[211] << (lk[1] % 16)) | (v[211] >>> (32 - (lk[1] % 16)));
    v[210] = (v[210] >>> (lk[0] % 16)) | (v[210] << (32 - (lk[0] % 16)));
    v[213] -= lk[1];
    v[212] ^= lk[0];
    v[215] -= lk[1];
    v[214] -= lk[0];
    v[217] ^= lk[1];
    v[216] -= lk[0];
    v[219] += lk[1];
    v[218] = (v[218] >>> (lk[0] % 16)) | (v[218] << (32 - (lk[0] % 16)));
    v[221] -= lk[1];
    v[220] ^= lk[0];
    v[223] ^= lk[1];
    v[222] -= lk[0];
    v[225] ^= lk[1];
    v[224] += lk[0];
    v[227] = (v[227] >>> (lk[1] % 16)) | (v[227] << (32 - (lk[1] % 16)));
    v[226] = (v[226] << (lk[0] % 16)) | (v[226] >>> (32 - (lk[0] % 16)));
    v[229] = (v[229] << (lk[1] % 16)) | (v[229] >>> (32 - (lk[1] % 16)));
    v[228] = (v[228] >>> (lk[0] % 16)) | (v[228] << (32 - (lk[0] % 16)));
    v[231] -= lk[1];
    v[230] ^= lk[0];
    v[233] -= lk[1];
    v[232] -= lk[0];
    v[235] ^= lk[1];
    v[234] -= lk[0];
    v[237] += lk[1];
    v[236] = (v[236] >>> (lk[0] % 16)) | (v[236] << (32 - (lk[0] % 16)));
    v[239] -= lk[1];
    v[238] ^= lk[0];
    v[241] ^= lk[1];
    v[240] -= lk[0];
    v[243] ^= lk[1];
    v[242] += lk[0];
    v[245] = (v[245] >>> (lk[1] % 16)) | (v[245] << (32 - (lk[1] % 16)));
    v[244] = (v[244] << (lk[0] % 16)) | (v[244] >>> (32 - (lk[0] % 16)));
    v[247] = (v[247] << (lk[1] % 16)) | (v[247] >>> (32 - (lk[1] % 16)));
    v[246] = (v[246] >>> (lk[0] % 16)) | (v[246] << (32 - (lk[0] % 16)));
    v[249] -= lk[1];
    v[248] ^= lk[0];
    v[251] -= lk[1];
    v[250] -= lk[0];
    v[253] ^= lk[1];
    v[252] -= lk[0];
    v[255] += lk[1];
    v[254] = (v[254] >>> (lk[0] % 16)) | (v[254] << (32 - (lk[0] % 16)));
    v[257] -= lk[1];
    v[256] ^= lk[0];
    v[259] ^= lk[1];
    v[258] -= lk[0];
    v[261] ^= lk[1];
    v[260] += lk[0];
    v[263] = (v[263] >>> (lk[1] % 16)) | (v[263] << (32 - (lk[1] % 16)));
    v[262] = (v[262] << (lk[0] % 16)) | (v[262] >>> (32 - (lk[0] % 16)));
    v[265] = (v[265] << (lk[1] % 16)) | (v[265] >>> (32 - (lk[1] % 16)));
    v[264] = (v[264] >>> (lk[0] % 16)) | (v[264] << (32 - (lk[0] % 16)));
    v[267] -= lk[1];
    v[266] ^= lk[0];
    v[269] -= lk[1];
    v[268] -= lk[0];
    v[271] ^= lk[1];
    v[270] -= lk[0];
    v[273] += lk[1];
    v[272] = (v[272] >>> (lk[0] % 16)) | (v[272] << (32 - (lk[0] % 16)));
    v[275] -= lk[1];
    v[274] ^= lk[0];
    v[277] ^= lk[1];
    v[276] -= lk[0];
    v[279] ^= lk[1];
    v[278] += lk[0];
    v[281] = (v[281] >>> (lk[1] % 16)) | (v[281] << (32 - (lk[1] % 16)));
    v[280] = (v[280] << (lk[0] % 16)) | (v[280] >>> (32 - (lk[0] % 16)));
    v[283] = (v[283] << (lk[1] % 16)) | (v[283] >>> (32 - (lk[1] % 16)));
    v[282] = (v[282] >>> (lk[0] % 16)) | (v[282] << (32 - (lk[0] % 16)));
    v[285] -= lk[1];
    v[284] ^= lk[0];
    v[287] -= lk[1];
    v[286] -= lk[0];
    v[289] ^= lk[1];
    v[288] -= lk[0];
    v[291] += lk[1];
    v[290] = (v[290] >>> (lk[0] % 16)) | (v[290] << (32 - (lk[0] % 16)));
    v[293] -= lk[1];
    v[292] ^= lk[0];
    v[295] ^= lk[1];
    v[294] -= lk[0];
    v[297] ^= lk[1];
    v[296] += lk[0];
    v[299] = (v[299] >>> (lk[1] % 16)) | (v[299] << (32 - (lk[1] % 16)));
    v[298] = (v[298] << (lk[0] % 16)) | (v[298] >>> (32 - (lk[0] % 16)));
    v[301] = (v[301] << (lk[1] % 16)) | (v[301] >>> (32 - (lk[1] % 16)));
    v[300] = (v[300] >>> (lk[0] % 16)) | (v[300] << (32 - (lk[0] % 16)));
    v[303] -= lk[1];
    v[302] ^= lk[0];
    v[305] -= lk[1];
    v[304] -= lk[0];
    v[307] ^= lk[1];
    v[306] -= lk[0];
    v[309] += lk[1];
    v[308] = (v[308] >>> (lk[0] % 16)) | (v[308] << (32 - (lk[0] % 16)));
    v[311] -= lk[1];
    v[310] ^= lk[0];
    v[313] ^= lk[1];
    v[312] -= lk[0];
    v[315] ^= lk[1];
    v[314] += lk[0];
    v[317] = (v[317] >>> (lk[1] % 16)) | (v[317] << (32 - (lk[1] % 16)));
    v[316] = (v[316] << (lk[0] % 16)) | (v[316] >>> (32 - (lk[0] % 16)));
    v[319] = (v[319] << (lk[1] % 16)) | (v[319] >>> (32 - (lk[1] % 16)));
    v[318] = (v[318] >>> (lk[0] % 16)) | (v[318] << (32 - (lk[0] % 16)));
    v[321] -= lk[1];
    v[320] ^= lk[0];
    v[323] -= lk[1];
    v[322] -= lk[0];
    v[325] ^= lk[1];
    v[324] -= lk[0];
    v[327] += lk[1];
    v[326] = (v[326] >>> (lk[0] % 16)) | (v[326] << (32 - (lk[0] % 16)));
    v[329] -= lk[1];
    v[328] ^= lk[0];
    v[331] ^= lk[1];
    v[330] -= lk[0];
    v[333] ^= lk[1];
    v[332] += lk[0];
    v[335] = (v[335] >>> (lk[1] % 16)) | (v[335] << (32 - (lk[1] % 16)));
    v[334] = (v[334] << (lk[0] % 16)) | (v[334] >>> (32 - (lk[0] % 16)));
    v[337] = (v[337] << (lk[1] % 16)) | (v[337] >>> (32 - (lk[1] % 16)));
    v[336] = (v[336] >>> (lk[0] % 16)) | (v[336] << (32 - (lk[0] % 16)));
    v[339] -= lk[1];
    v[338] ^= lk[0];
    v[341] -= lk[1];
    v[340] -= lk[0];
    v[343] ^= lk[1];
    v[342] -= lk[0];
    v[345] += lk[1];
    v[344] = (v[344] >>> (lk[0] % 16)) | (v[344] << (32 - (lk[0] % 16)));
    v[347] -= lk[1];
    v[346] ^= lk[0];
    v[349] ^= lk[1];
    v[348] -= lk[0];
    v[351] ^= lk[1];
    v[350] += lk[0];
    v[353] = (v[353] >>> (lk[1] % 16)) | (v[353] << (32 - (lk[1] % 16)));
    v[352] = (v[352] << (lk[0] % 16)) | (v[352] >>> (32 - (lk[0] % 16)));
    v[355] = (v[355] << (lk[1] % 16)) | (v[355] >>> (32 - (lk[1] % 16)));
    v[354] = (v[354] >>> (lk[0] % 16)) | (v[354] << (32 - (lk[0] % 16)));
    v[357] -= lk[1];
    v[356] ^= lk[0];
    v[359] -= lk[1];
    v[358] -= lk[0];
    v[361] ^= lk[1];
    v[360] -= lk[0];
    for (var I = 0; I < 362; I += 2) {
        var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 361; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x19ae28fe;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(s457bd522c3e350, s457bd522c3e351, s457bd522c3e352);
}
var s457bd522c3e35 = [0x547d2251, 0x5622a1a1, 0x92795986, 0x43818369, 0x57c303c6, 0xf9344df, 0xeac25dc7, 0x947c0efe, 0x52431243, 0xd4cd0528, 0xae72e54f, 0x696d9224, 0x8206b7bd, 0xc192b006, 0xb5adaf9d, 0x9f0f797d, 0xbb9a59db, 0xb8a4939a, 0x241dac43, 0x20f06d73, 0x15bf4faf, 0xb5b5e7eb, 0xc5b72f73, 0xe9c47c98, 0xa18b3bcf, 0x7415614a, 0xb2da31c6, 0xd0c6f0af, 0x9594904d, 0x6da0fd8c, 0x3be48ab9, 0x445afc46, 0x9309ecdb, 0x888171b5, 0x17dbeca1, 0x6912ff20, 0xf477619d, 0xcfa0a050, 0x8f3e4a01, 0xd6eb42a7, 0xac54d084, 0x7685222a, 0xe732e58f, 0x1e70fbbc, 0x548ae126, 0x5fcb4a25, 0x2333e619, 0xecfd17f8, 0x7dc66be6, 0x8626628f, 0x4d45a0bb, 0x7380cf95, 0xc64dc569, 0x52b5cbd9, 0xac10df4a, 0x8448797e, 0x557715b2, 0xc2b39a60, 0x40a4dc49, 0x676d8468, 0xf75918b2, 0x68f323f9, 0x7b35b9bc, 0x33540013, 0xec2c04a5, 0x922dfb4f, 0x21d5237e, 0xa8f8d530, 0x80ba9c9e, 0x70602785, 0xb3da9949, 0x55e8ce60, 0xdff2f9b2, 0xf617ff93, 0xe731ca8b, 0x6c30e629, 0x223fc80e, 0x9e3deb82, 0x3e2c904a, 0x23829ef4, 0xff562318, 0xeb20c194, 0xf4075ee2, 0x7c12b054, 0xed5ae6f2, 0x478e62f1, 0x27ebafee, 0x3762622c, 0x7636a8f9, 0x5c808dcd, 0x42dcccec, 0xff584a8a, 0x5c6ec70a, 0xd5ec2087, 0xb713a32c, 0xb0271a5c, 0x6a063890, 0x88a5a6b2, 0xa1f88b23, 0x8a2161e5, 0x4b7fe2da, 0xf7ee5b27, 0x230aa4eb, 0x98e7ec8, 0x8b0b320e, 0x1139cc5c, 0x1dbf6767, 0xceae29ef, 0x2c020af9, 0xa28c968f, 0xe5a32c56, 0xa9fc90bf, 0x6305979a, 0x54c8b0d1, 0xdfa67c96, 0xc334a0f, 0xe5eb44ec, 0x6dbf4625, 0x3757936b, 0x666726a8, 0x5f817576, 0x9c7e9d00, 0x2ae860e5, 0xa0454a30, 0xd2b827fc, 0x19f09c6d, 0x38cb346d, 0x5bd10ab1, 0x54d14dd3, 0x480eed4, 0xa3cd07ae, 0x31d9c61a, 0xd7872da4, 0x791a4743, 0x8b6058e, 0x5f9842e5, 0x192a858a, 0x249f234b, 0xa8864617, 0x403460cc, 0x2c521ce5, 0x4c9468b5, 0x5208c44, 0x166bead1, 0x29572bf, 0x2b43618e, 0x72b334c5, 0x7aff48cf, 0xab81ef1f, 0xc6a08f41, 0xbf2f6640, 0x449f7940, 0x36386598, 0xe76dda0e, 0xc69efb4d, 0x478fe04f, 0x5651be06, 0x8576050e, 0xcaecd6a1, 0xc634b841, 0xba767531, 0xabcaed8e, 0xc8f218aa, 0xa89dcfd, 0x18a53fa9, 0xa719a76, 0x78485dc4, 0x86372ed, 0x5d5b5755, 0x86a41def, 0xf2633f17, 0x7d978c9c, 0x3be7414f, 0x213eba9d, 0x413fe0f8, 0xb5d43a9a, 0x17ddc96a, 0xe17ddc2c, 0x19334946, 0x3cd17959, 0x1e5a582d, 0xde7edbed, 0xf9c2f5ff, 0x75ac53ce, 0xe58d4349, 0xe3cdd90c, 0x96f2cb42, 0x8830daee, 0x5607e321, 0x33445141, 0xa914e793, 0xa5207a0b, 0x21e00515, 0xf472ad78, 0x5fe4bda7, 0x4d75f572, 0x590b53bf, 0xcf77602d, 0xba1a984c, 0xf8d06113, 0x57723851, 0xf1a2556, 0x872b606, 0xbe4ca264, 0xac0fe2e5, 0xb3a95ee1, 0x7b73457f, 0x12abb6d, 0x7e5c488b, 0x58559163, 0x5e88dcde, 0xb7e5382d, 0xc1681b51, 0xf149efc8, 0xe5a53fca, 0x3e51fa1f, 0xe05cee09, 0xa4a80750, 0x3017460c, 0xe60e8f13, 0x499d9600, 0x8bb52eee, 0xf36e8a21, 0xbfd0d1f0, 0x46300ec, 0x166255c7, 0xbe9c4535, 0xa95b7169, 0x787d1660, 0x573e72e9, 0xc4e66ea5, 0x7a99c4bd, 0x5eb0f706, 0xa3c301e7, 0x41cae2b0, 0x8d001450, 0xe6507d5b, 0xf5e78d38, 0x89ffc3cd, 0xf6ea83ce, 0x2ac477c6, 0xa79c227c, 0xd469e4d, 0x637a724d, 0xae1520bd, 0xc66736d2, 0x4ee29ad7, 0x5946fd4a, 0xca5d7c2a, 0xdd94681c, 0x56d978bc, 0xdd3507da, 0x135e01e, 0xfaf2de04, 0xc2b5e29a, 0x287e783, 0x72af5542, 0xe6470de3, 0x7964ad2c, 0xe2c93c37, 0x21f14012, 0xc065ebb7, 0x9def0ed7, 0x162a7906, 0x1acae838, 0x4123a322, 0x823f509a, 0xc77b1329, 0x41385ae6, 0xb1c0e6a1, 0xff144a36, 0x878675bd, 0x5c20c06e, 0xc0472e0f, 0x66ac6e96, 0x539b8ed, 0x3f5d6986, 0x1d2911c9, 0xa3a48f40, 0xe7c8edcc, 0x330176f, 0x987c6443, 0xd5b2b694, 0xbfb5d272, 0x9eed7eba, 0xdfb5085b, 0xa17dc881, 0x5cc11cdd, 0x27def9e6, 0x9b5d33b4, 0xf5b7da84, 0xd644cab5, 0xc21c7009, 0x477df477, 0xb62fef1b, 0xe384b26d, 0xf28b58c1, 0x5389cf32, 0xd9e9f16b, 0x709581cf, 0x545bc061, 0x5191aff2, 0xc81b7652, 0xa295cbea, 0x58b8dfa5, 0x11fb02aa, 0xa53ea906, 0x50baa813, 0xf9163064, 0x94e78fa9, 0x35da876d, 0x394c7971, 0x8b200566, 0xb1db8ad, 0x1754ad01, 0x25b9ac11, 0xed5c92af, 0x55d1d26e, 0x4467f23a, 0xc1ea56fc, 0xcd3d43f, 0x5348139e, 0x32c469d5, 0xa4e9cbfc, 0xd07e85f3, 0x99982932, 0xd990ebd9, 0x24c36472, 0x735effdb, 0xdac4263b, 0x9ef35367, 0xa30843bf, 0xda734ad6, 0x7a6e818e, 0xe175048, 0x5b39056a, 0xd28672d9, 0x6c0b657e, 0x9070ddf8, 0x4df51d1f, 0xb90ca10, 0x78061796, 0x995ee5ac, 0x9a41ed1, 0x1db810fb, 0x92692f44, 0x16d365, 0x8d4b23d5, 0xf2df3a7a, 0xc6ade235, 0x9eeaa174, 0x51fb9568, 0x3cfc6d3a, 0x3cd2c83f, 0x17c8ea42, 0x4a7bc8a0, 0x14882476, 0xfcac4819, 0xf565a862, 0xa801d014, 0x4581d43b, 0xe3bc5950];
function k927cea2d4369(v607jd2eb0b3abf9150, v607jd2eb0b3abf9151, v607jd2eb0b3abf9152, v607jd2eb0b3abf9153) {
    var rk = [24, 30, 23, 20, 14, 37, 35, 32, 10, 24, 30, 23, 20, 14, 37, 35, 32, 10, 24, 30, 23, 20, 14, 37, 35, 32, 10, 24, 30, 23, 20, 14, 37, 35, 32, 10, 24, 30, 23, 20, 14, 37, 35, 32, 10, 24, 30, 23, 20, 14, 37, 35, 32, 10, 24];
    var k2 = [0x69044f9b, 0x27934031];
    var lk = [0x69044f9b, 0x27934031];
    var v = v607jd2eb0b3abf915.slice(0);
    var k = [0x174d4dc8, 0xfb8b26a6, 0x7b5a767d, 0x3b251e1f];
    for (var O = 0; O < 110; O++) {
        v[O] ^= 0xf7fadfc;
    }
    v[1] = (v[1] << (lk[1] % 16)) | (v[1] >>> (32 - (lk[1] % 16)));
    v[0] = (v[0] << (lk[0] % 16)) | (v[0] >>> (32 - (lk[0] % 16)));
    v[3] -= lk[1];
    v[2] += lk[0];
    v[5] -= lk[1];
    v[4] ^= lk[0];
    v[7] = (v[7] << (lk[1] % 16)) | (v[7] >>> (32 - (lk[1] % 16)));
    v[6] -= lk[0];
    v[9] -= lk[1];
    v[8] += lk[0];
    v[11] ^= lk[1];
    v[10] -= lk[0];
    v[13] -= lk[1];
    v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
    v[15] ^= lk[1];
    v[14] -= lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] = (v[19] << (lk[1] % 16)) | (v[19] >>> (32 - (lk[1] % 16)));
    v[18] = (v[18] << (lk[0] % 16)) | (v[18] >>> (32 - (lk[0] % 16)));
    v[21] -= lk[1];
    v[20] += lk[0];
    v[23] -= lk[1];
    v[22] ^= lk[0];
    v[25] = (v[25] << (lk[1] % 16)) | (v[25] >>> (32 - (lk[1] % 16)));
    v[24] -= lk[0];
    v[27] -= lk[1];
    v[26] += lk[0];
    v[29] ^= lk[1];
    v[28] -= lk[0];
    v[31] -= lk[1];
    v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
    v[33] ^= lk[1];
    v[32] -= lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] = (v[37] << (lk[1] % 16)) | (v[37] >>> (32 - (lk[1] % 16)));
    v[36] = (v[36] << (lk[0] % 16)) | (v[36] >>> (32 - (lk[0] % 16)));
    v[39] -= lk[1];
    v[38] += lk[0];
    v[41] -= lk[1];
    v[40] ^= lk[0];
    v[43] = (v[43] << (lk[1] % 16)) | (v[43] >>> (32 - (lk[1] % 16)));
    v[42] -= lk[0];
    v[45] -= lk[1];
    v[44] += lk[0];
    v[47] ^= lk[1];
    v[46] -= lk[0];
    v[49] -= lk[1];
    v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
    v[51] ^= lk[1];
    v[50] -= lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] = (v[55] << (lk[1] % 16)) | (v[55] >>> (32 - (lk[1] % 16)));
    v[54] = (v[54] << (lk[0] % 16)) | (v[54] >>> (32 - (lk[0] % 16)));
    v[57] -= lk[1];
    v[56] += lk[0];
    v[59] -= lk[1];
    v[58] ^= lk[0];
    v[61] = (v[61] << (lk[1] % 16)) | (v[61] >>> (32 - (lk[1] % 16)));
    v[60] -= lk[0];
    v[63] -= lk[1];
    v[62] += lk[0];
    v[65] ^= lk[1];
    v[64] -= lk[0];
    v[67] -= lk[1];
    v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
    v[69] ^= lk[1];
    v[68] -= lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] = (v[73] << (lk[1] % 16)) | (v[73] >>> (32 - (lk[1] % 16)));
    v[72] = (v[72] << (lk[0] % 16)) | (v[72] >>> (32 - (lk[0] % 16)));
    v[75] -= lk[1];
    v[74] += lk[0];
    v[77] -= lk[1];
    v[76] ^= lk[0];
    v[79] = (v[79] << (lk[1] % 16)) | (v[79] >>> (32 - (lk[1] % 16)));
    v[78] -= lk[0];
    v[81] -= lk[1];
    v[80] += lk[0];
    v[83] ^= lk[1];
    v[82] -= lk[0];
    v[85] -= lk[1];
    v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
    v[87] ^= lk[1];
    v[86] -= lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] = (v[91] << (lk[1] % 16)) | (v[91] >>> (32 - (lk[1] % 16)));
    v[90] = (v[90] << (lk[0] % 16)) | (v[90] >>> (32 - (lk[0] % 16)));
    v[93] -= lk[1];
    v[92] += lk[0];
    v[95] -= lk[1];
    v[94] ^= lk[0];
    v[97] = (v[97] << (lk[1] % 16)) | (v[97] >>> (32 - (lk[1] % 16)));
    v[96] -= lk[0];
    v[99] -= lk[1];
    v[98] += lk[0];
    v[101] ^= lk[1];
    v[100] -= lk[0];
    v[103] -= lk[1];
    v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)));
    v[105] ^= lk[1];
    v[104] -= lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] = (v[109] << (lk[1] % 16)) | (v[109] >>> (32 - (lk[1] % 16)));
    v[108] = (v[108] << (lk[0] % 16)) | (v[108] >>> (32 - (lk[0] % 16)));
    for (var I = 0; I < 110; I += 2) {
        var i, v0 = v[I] ^ k2[0], v1 = v[I + 1] ^ k2[1], d = 0x9E3779B9, sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 109; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0xf7fadfc;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(v607jd2eb0b3abf9150, 32, k, v607jd2eb0b3abf9151, v607jd2eb0b3abf9152, v607jd2eb0b3abf9153);
}
var v607jd2eb0b3abf915 = [0xbf0ffe02, 0xaa4ef75f, 0xa581579a, 0x39884978, 0x5d0ced0, 0x4febd035, 0x2f968912, 0xdc7cf7a4, 0x5962c9fa, 0x5b723a54, 0x8c02971d, 0xef4c07a0, 0x332ea72c, 0x260ad160, 0x42a38a83, 0xcc23ab5b, 0x8ef1e219, 0xf222db3b, 0x8bd626ed, 0xfb1ce7b4, 0xe266fe61, 0x689117a4, 0x1bbcbca3, 0x40733a1a, 0xc260d6f0, 0xeeff2939, 0xf23612c, 0x45be739a, 0xec7f0acc, 0x6115e57a, 0xee9f015, 0xe41a2052, 0xcc62b878, 0x7d3d436b, 0x68d0c797, 0x81ab3fa1, 0x9bb81446, 0xe6195350, 0xae6526e0, 0x659dbbd6, 0x95251445, 0xc3a0879e, 0xdb7ba33c, 0x1ea4dffe, 0x495af2f7, 0xf29a8c97, 0xdcf3d669, 0xe4ba1030, 0x2216b5f1, 0x225cf8e4, 0xa8df71be, 0x194de943, 0xaf1127fb, 0xc4a2024, 0xa0add6e6, 0x44a6838a, 0x2f537c7f, 0x47a33953, 0x88b57368, 0x407826bd, 0xa6b7e1ca, 0x70508b2b, 0xd7adee8d, 0x75ee5e8b, 0x1468c1b8, 0x9123925e, 0x2768fc36, 0x1f8eb7d8, 0x86e00750, 0xca4a1e66, 0x1ac8048b, 0xa58e75f6, 0x63bd5bad, 0x3b802ee8, 0x5153a35e, 0x454d7ea0, 0x508ac024, 0xb77a4994, 0x431163fb, 0x45405a63, 0xc42c6300, 0x2570ebc9, 0x1545eb71, 0xc8426e28, 0xd46782cb, 0x186fce42, 0x4c4687e1, 0xb5c861a6, 0x2fdecd5, 0xa1b9ed2, 0xa358c8d3, 0xeb09b9ec, 0x9dd20aa, 0x7f653680, 0xc3fd03fd, 0x5ab84b04, 0x1c112ddb, 0xdaf86ac5, 0x9fae1fd2, 0x9fbce9d7, 0xcec8d16c, 0x827a71e7, 0x9d88c297, 0x72b9f863, 0x249ae888, 0x66c44740, 0x4a96db8d, 0x2bdbffe1, 0xe900182b, 0x679b0118];

exports = module.exports = {
    sign:ub98484234
}
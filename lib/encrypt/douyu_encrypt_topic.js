var CryptoJS = require("crypto-js")
var vdwdae325w_64we = "220120191014";
var y09eb5d9f11815852d90b = [0xaed24c5a, 0x1ec3d953, 0xf59b2cac, 0xdcbeb61c, 0x6ab92450, 0x7f3a0464, 0xf32cb49e, 0xef990f71, 0xc807729d, 0x62fdc840, 0x91c467a1, 0xf356872c, 0xdc15aad1, 0xae8d0fa1, 0x1087c927, 0xf8c74c02, 0xc0b44cd7, 0xc04a2c3a, 0x74d6d753, 0xcc55ab30, 0xc6dd13ac, 0x7ad65a73, 0xc93c106b, 0xf92c1271, 0x4583f098, 0xa4d26d06, 0xefd5b40, 0x1cec699c, 0xbe680a27, 0x17c50b73, 0xfa69c767, 0x80b5d83, 0xfd9f7821, 0xc7f1b311, 0x8dd9e4a6, 0x19bda783, 0x9bcc534a, 0xa83a45b6, 0xe1654b55, 0x77bb7065, 0x5385c964, 0x61ec59e9, 0xf4834fd1, 0x57793008, 0xd6540061, 0x8536bab2, 0x78f3f103, 0x8514eed6, 0x81fe26a7, 0x6866e506, 0xe9353d96, 0xa2f4a85c, 0xb7322585, 0x56631d33, 0x701c796, 0x36ce9fd4, 0x410d666e, 0x8ec5938, 0x37b8627b, 0xd4955e32, 0xebddc4ea, 0x7a2a9e73, 0x85c3d36a, 0x64d82d1d, 0x97f4d98d, 0x3cb69023, 0x454b7b58, 0x9c972068, 0x8211cbe2, 0xac51ddb7, 0xf8fd320, 0x6f9bd706, 0x40064ce2, 0xa1a4d127, 0xdce162b0, 0x2373ada5, 0x5211e98c, 0x21cbb4cd, 0xee66c5c, 0x242bff0d, 0x9a05c01f, 0xe8c8e215, 0xff9eaf56, 0x70c46f73, 0xd4491198, 0x18807925, 0x3c943781, 0xb5cb799, 0x4af113d3, 0x297f0e32, 0x9376e046, 0x2978a6d3, 0x384a28bd, 0x14b12598, 0x97fc1ea6, 0xb618eccd, 0x5217c66c, 0x80190dd1, 0x11b1ad3e, 0x15b2c195, 0x12531feb, 0xb6c159d2, 0xde9ae1e1, 0x840f620e, 0x5705380f, 0x64d3f692, 0xf3c3f1a1, 0x8f2bb91a, 0xb6c765ec, 0xf9cd8c10, 0xcca39130, 0x68aa29c5, 0xf7145b00, 0x94823f0d, 0xe9112999, 0xfeb85b7b, 0x9680779a, 0xe1157280, 0x8c9648e8, 0xf185f49d, 0xc46603fa, 0xa43ae019, 0xacabd03e, 0x9315cf4c, 0x2aa1f97, 0xd20420e1, 0x7210dfb, 0x1886f7cd, 0x4f5e893e, 0x361c0d2f, 0xe4df9354, 0x997e90a8, 0xcba86016, 0x8625d91a, 0xd8dc7831, 0x4061abab, 0x957bf1fc, 0x163c12e1, 0xd55b5c39, 0x70f65b1d, 0xea8ae08a, 0xb85c34d0, 0x74d553da, 0x83396f6d, 0xa5fa692e, 0x76062afc, 0xf3024525, 0x5541267e, 0xb390a70a, 0x25945408, 0xf0f55159, 0x8406c4a7, 0x4fba714f, 0x598ecbf7, 0xedfd5deb, 0x33766744, 0xbea4d8b9, 0xe076cb91, 0xc5eae6e5, 0xb808d1af, 0x972567dc, 0x4f5c8e56, 0xac2ea83e, 0xae8f5af4, 0xfa5d02d2, 0xca110793, 0x23f2f40f, 0xee8edc72, 0x77cec6f3, 0x4f6b580f, 0x163d2f15, 0x5d938988, 0xafe038be, 0xb2aaaa3a, 0xce78411e, 0x75797c1e, 0x3dde8c04, 0xfaaebd17, 0x1a7cc65b, 0x6feda7fe, 0xee848770, 0xdb378243, 0xb5a3ba3c, 0x6bc4bce5, 0xc7ebe432, 0x70d332f9, 0x375ae072, 0x186eb64e, 0x8ffc0157, 0xc0347ab5, 0x1e43a17e, 0x9c2caf12, 0xd10f4de5, 0xc8445d52, 0x8d068752, 0xc310551b, 0x30647cf, 0x5677e439, 0x3d385559, 0xd51179e0, 0x47ff8fb2, 0xf286bc43, 0xadffc81, 0xa19b2ac, 0x6970b07b, 0xaffa5113, 0x6cedf1c7, 0xaf0c8f40, 0x24d6be6c, 0xc66a1cb3, 0xedf7f78f, 0x799a9583, 0xbbb93fe0, 0xdc2736d3, 0x36e50907, 0x5fa25087, 0xd08df93, 0xee70ddc4, 0x4f0e3e23, 0x9b22d66a, 0x53a48e5, 0xd2a3d287, 0x3ceb37ab, 0xb42f6ff9, 0x14062da3, 0xf9a64d0a, 0x8b36b515, 0x5d06acd7, 0xddac12b5, 0xb1deb345, 0x8feeafa2, 0x5a277f56, 0x859f916e, 0x9c92276a, 0x5638564d, 0xb269469d, 0x7732e84a, 0x2c754dca, 0x451d4140, 0x45e8c59c, 0xec659c85, 0x31958356, 0x94fbeed3, 0x3cd7c63f, 0xb7184917, 0x5372ec1, 0x5c5ebc78, 0xfb1d691a, 0x8b4d306b, 0xa6a64d75, 0x6ff92d15, 0x81066609, 0x906d4e7b, 0x27e91870, 0xb9a4118d, 0x99f41825, 0xa09bd31e, 0xc5b93c54, 0x311795f3, 0xb3d769ec, 0x5377df91, 0xad6f3f96, 0x975325c3, 0x2df55ad6, 0x91a94f67, 0x71cf9bdd, 0xf347540, 0x4ce9e517, 0xf4855522, 0x82d984d5, 0x657eb02b, 0x62fb6856, 0x685992ce, 0x29140e33, 0x7a7b0f32, 0xd87f1674, 0x3b2d743d, 0x563c4b3f, 0x7e95f160, 0xe864c8db, 0xa102a537, 0xbc98c933, 0xcd5bd2f, 0x6a5267e9, 0xf64ad8ec, 0x2ed18c09, 0x5655c9b5, 0x862fb6e1, 0x12946111, 0x95f7822c, 0xe57893dd, 0xe277df45, 0xa5746a42, 0x40b31416, 0x49da4469, 0x967e6d22, 0xd7ade683, 0xb3406b4c, 0x61b386de, 0x812d8b78, 0xa348303a, 0xa4b95bf9, 0x8735841, 0x7bb93976, 0x5d207a9b, 0x5ec38d06, 0x480a3189, 0x9da68927, 0xbe2481fa, 0x538ced91, 0xef0c5e8f, 0xf47f9922, 0xddb8e8ef, 0x61a697, 0x1a88d6c8, 0x8a78bd51, 0xfbd80c2a, 0x9ced5bfb, 0x2da6dce, 0x586c959b, 0x88c0160, 0xc1bad7e7, 0x763c3090, 0xf062c3c1, 0xb52389d4, 0x60790785, 0x7024b26f, 0x35c5c8bc, 0xaef39571, 0x32037be0, 0xa932a9d5, 0xd7c2bbc, 0x65829c46, 0x23970f97, 0x2a224bef, 0xbc7ebeda, 0xe76aacbd, 0x3181284b, 0x4067dcb, 0xe7050693, 0xdf3271eb, 0xb56d6e1d, 0xf969ec5f, 0x2d1c9742, 0x3ff21e33, 0xccb420ff, 0xc97091b6, 0x59eb07c9, 0x16ca81cf, 0xd0bb445e, 0xb9e365c7, 0x566a9536, 0xb14111a9, 0x318ff441, 0x845cb63c, 0xc3dfc23f, 0x65a10615, 0x15211c82, 0x1d1b127c, 0xd582e089, 0x9336939e, 0xb1f28957, 0x6cb55e6c, 0xee6544b, 0x2ded0e38, 0x8de8479f, 0x666dc480, 0xafbb51b1, 0x2b8c9aa, 0xece84fd1, 0xb3e4788b, 0xf0c77770, 0x3bf3a7b8, 0x76bba9c6, 0x3786fa4d, 0xdb587102, 0xf40e0260, 0xa28715ab, 0x4822d2b4, 0x61fcd584, 0x90cc2d05, 0x9412ba6b, 0xf32b5473, 0x75820451, 0x310793b3, 0x775ba07d, 0xd0be5265, 0xa8282bcd, 0x7e3226c9, 0xcba94fe1, 0xdd2435ac, 0xac079357, 0x51609b6f, 0x8e14ea73, 0x61f7c1da, 0x9cece162, 0xe717ae05, 0x11d7bb7f, 0x7f61c9cb, 0xd29f0dd2, 0xf5270a29, 0x2e534fce, 0xb3cb6c6e, 0xc1546146];
function ub98484234(y09eb5d9f11815852d90b0, y09eb5d9f11815852d90b1, y09eb5d9f11815852d90b2) {
    var rk = [31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29, 39, 39, 38, 34, 10, 31, 22, 10, 29];
    var k2 = [0x1a975510, 0x71a9e409];
    var lk = [0x1a975510, 0x71a9e409];
    var v = y09eb5d9f11815852d90b.slice(0);
    var k = [0x3bbe6784, 0x6cd672ae, 0x96496df1, 0xbfe901eb];
    for (var O = 0; O < 404; O++) {
        v[O] ^= 0x5b379eab;
    }
    v[1] += lk[1];
    v[0] -= lk[0];
    v[3] ^= lk[1];
    v[2] = (v[2] >>> (lk[0] % 16)) | (v[2] << (32 - (lk[0] % 16)));
    v[5] -= lk[1];
    v[4] ^= lk[0];
    v[7] = (v[7] >>> (lk[1] % 16)) | (v[7] << (32 - (lk[1] % 16)));
    v[6] -= lk[0];
    v[9] = (v[9] >>> (lk[1] % 16)) | (v[9] << (32 - (lk[1] % 16)));
    v[8] += lk[0];
    v[11] -= lk[1];
    v[10] = (v[10] << (lk[0] % 16)) | (v[10] >>> (32 - (lk[0] % 16)));
    v[13] = (v[13] << (lk[1] % 16)) | (v[13] >>> (32 - (lk[1] % 16)));
    v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
    v[15] -= lk[1];
    v[14] ^= lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] += lk[1];
    v[18] -= lk[0];
    v[21] ^= lk[1];
    v[20] = (v[20] >>> (lk[0] % 16)) | (v[20] << (32 - (lk[0] % 16)));
    v[23] -= lk[1];
    v[22] ^= lk[0];
    v[25] = (v[25] >>> (lk[1] % 16)) | (v[25] << (32 - (lk[1] % 16)));
    v[24] -= lk[0];
    v[27] = (v[27] >>> (lk[1] % 16)) | (v[27] << (32 - (lk[1] % 16)));
    v[26] += lk[0];
    v[29] -= lk[1];
    v[28] = (v[28] << (lk[0] % 16)) | (v[28] >>> (32 - (lk[0] % 16)));
    v[31] = (v[31] << (lk[1] % 16)) | (v[31] >>> (32 - (lk[1] % 16)));
    v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
    v[33] -= lk[1];
    v[32] ^= lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] += lk[1];
    v[36] -= lk[0];
    v[39] ^= lk[1];
    v[38] = (v[38] >>> (lk[0] % 16)) | (v[38] << (32 - (lk[0] % 16)));
    v[41] -= lk[1];
    v[40] ^= lk[0];
    v[43] = (v[43] >>> (lk[1] % 16)) | (v[43] << (32 - (lk[1] % 16)));
    v[42] -= lk[0];
    v[45] = (v[45] >>> (lk[1] % 16)) | (v[45] << (32 - (lk[1] % 16)));
    v[44] += lk[0];
    v[47] -= lk[1];
    v[46] = (v[46] << (lk[0] % 16)) | (v[46] >>> (32 - (lk[0] % 16)));
    v[49] = (v[49] << (lk[1] % 16)) | (v[49] >>> (32 - (lk[1] % 16)));
    v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
    v[51] -= lk[1];
    v[50] ^= lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] += lk[1];
    v[54] -= lk[0];
    v[57] ^= lk[1];
    v[56] = (v[56] >>> (lk[0] % 16)) | (v[56] << (32 - (lk[0] % 16)));
    v[59] -= lk[1];
    v[58] ^= lk[0];
    v[61] = (v[61] >>> (lk[1] % 16)) | (v[61] << (32 - (lk[1] % 16)));
    v[60] -= lk[0];
    v[63] = (v[63] >>> (lk[1] % 16)) | (v[63] << (32 - (lk[1] % 16)));
    v[62] += lk[0];
    v[65] -= lk[1];
    v[64] = (v[64] << (lk[0] % 16)) | (v[64] >>> (32 - (lk[0] % 16)));
    v[67] = (v[67] << (lk[1] % 16)) | (v[67] >>> (32 - (lk[1] % 16)));
    v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
    v[69] -= lk[1];
    v[68] ^= lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] += lk[1];
    v[72] -= lk[0];
    v[75] ^= lk[1];
    v[74] = (v[74] >>> (lk[0] % 16)) | (v[74] << (32 - (lk[0] % 16)));
    v[77] -= lk[1];
    v[76] ^= lk[0];
    v[79] = (v[79] >>> (lk[1] % 16)) | (v[79] << (32 - (lk[1] % 16)));
    v[78] -= lk[0];
    v[81] = (v[81] >>> (lk[1] % 16)) | (v[81] << (32 - (lk[1] % 16)));
    v[80] += lk[0];
    v[83] -= lk[1];
    v[82] = (v[82] << (lk[0] % 16)) | (v[82] >>> (32 - (lk[0] % 16)));
    v[85] = (v[85] << (lk[1] % 16)) | (v[85] >>> (32 - (lk[1] % 16)));
    v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
    v[87] -= lk[1];
    v[86] ^= lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] += lk[1];
    v[90] -= lk[0];
    v[93] ^= lk[1];
    v[92] = (v[92] >>> (lk[0] % 16)) | (v[92] << (32 - (lk[0] % 16)));
    v[95] -= lk[1];
    v[94] ^= lk[0];
    v[97] = (v[97] >>> (lk[1] % 16)) | (v[97] << (32 - (lk[1] % 16)));
    v[96] -= lk[0];
    v[99] = (v[99] >>> (lk[1] % 16)) | (v[99] << (32 - (lk[1] % 16)));
    v[98] += lk[0];
    v[101] -= lk[1];
    v[100] = (v[100] << (lk[0] % 16)) | (v[100] >>> (32 - (lk[0] % 16)));
    v[103] = (v[103] << (lk[1] % 16)) | (v[103] >>> (32 - (lk[1] % 16)));
    v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)));
    v[105] -= lk[1];
    v[104] ^= lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] += lk[1];
    v[108] -= lk[0];
    v[111] ^= lk[1];
    v[110] = (v[110] >>> (lk[0] % 16)) | (v[110] << (32 - (lk[0] % 16)));
    v[113] -= lk[1];
    v[112] ^= lk[0];
    v[115] = (v[115] >>> (lk[1] % 16)) | (v[115] << (32 - (lk[1] % 16)));
    v[114] -= lk[0];
    v[117] = (v[117] >>> (lk[1] % 16)) | (v[117] << (32 - (lk[1] % 16)));
    v[116] += lk[0];
    v[119] -= lk[1];
    v[118] = (v[118] << (lk[0] % 16)) | (v[118] >>> (32 - (lk[0] % 16)));
    v[121] = (v[121] << (lk[1] % 16)) | (v[121] >>> (32 - (lk[1] % 16)));
    v[120] = (v[120] >>> (lk[0] % 16)) | (v[120] << (32 - (lk[0] % 16)));
    v[123] -= lk[1];
    v[122] ^= lk[0];
    v[125] -= lk[1];
    v[124] -= lk[0];
    v[127] += lk[1];
    v[126] -= lk[0];
    v[129] ^= lk[1];
    v[128] = (v[128] >>> (lk[0] % 16)) | (v[128] << (32 - (lk[0] % 16)));
    v[131] -= lk[1];
    v[130] ^= lk[0];
    v[133] = (v[133] >>> (lk[1] % 16)) | (v[133] << (32 - (lk[1] % 16)));
    v[132] -= lk[0];
    v[135] = (v[135] >>> (lk[1] % 16)) | (v[135] << (32 - (lk[1] % 16)));
    v[134] += lk[0];
    v[137] -= lk[1];
    v[136] = (v[136] << (lk[0] % 16)) | (v[136] >>> (32 - (lk[0] % 16)));
    v[139] = (v[139] << (lk[1] % 16)) | (v[139] >>> (32 - (lk[1] % 16)));
    v[138] = (v[138] >>> (lk[0] % 16)) | (v[138] << (32 - (lk[0] % 16)));
    v[141] -= lk[1];
    v[140] ^= lk[0];
    v[143] -= lk[1];
    v[142] -= lk[0];
    v[145] += lk[1];
    v[144] -= lk[0];
    v[147] ^= lk[1];
    v[146] = (v[146] >>> (lk[0] % 16)) | (v[146] << (32 - (lk[0] % 16)));
    v[149] -= lk[1];
    v[148] ^= lk[0];
    v[151] = (v[151] >>> (lk[1] % 16)) | (v[151] << (32 - (lk[1] % 16)));
    v[150] -= lk[0];
    v[153] = (v[153] >>> (lk[1] % 16)) | (v[153] << (32 - (lk[1] % 16)));
    v[152] += lk[0];
    v[155] -= lk[1];
    v[154] = (v[154] << (lk[0] % 16)) | (v[154] >>> (32 - (lk[0] % 16)));
    v[157] = (v[157] << (lk[1] % 16)) | (v[157] >>> (32 - (lk[1] % 16)));
    v[156] = (v[156] >>> (lk[0] % 16)) | (v[156] << (32 - (lk[0] % 16)));
    v[159] -= lk[1];
    v[158] ^= lk[0];
    v[161] -= lk[1];
    v[160] -= lk[0];
    v[163] += lk[1];
    v[162] -= lk[0];
    v[165] ^= lk[1];
    v[164] = (v[164] >>> (lk[0] % 16)) | (v[164] << (32 - (lk[0] % 16)));
    v[167] -= lk[1];
    v[166] ^= lk[0];
    v[169] = (v[169] >>> (lk[1] % 16)) | (v[169] << (32 - (lk[1] % 16)));
    v[168] -= lk[0];
    v[171] = (v[171] >>> (lk[1] % 16)) | (v[171] << (32 - (lk[1] % 16)));
    v[170] += lk[0];
    v[173] -= lk[1];
    v[172] = (v[172] << (lk[0] % 16)) | (v[172] >>> (32 - (lk[0] % 16)));
    v[175] = (v[175] << (lk[1] % 16)) | (v[175] >>> (32 - (lk[1] % 16)));
    v[174] = (v[174] >>> (lk[0] % 16)) | (v[174] << (32 - (lk[0] % 16)));
    v[177] -= lk[1];
    v[176] ^= lk[0];
    v[179] -= lk[1];
    v[178] -= lk[0];
    v[181] += lk[1];
    v[180] -= lk[0];
    v[183] ^= lk[1];
    v[182] = (v[182] >>> (lk[0] % 16)) | (v[182] << (32 - (lk[0] % 16)));
    v[185] -= lk[1];
    v[184] ^= lk[0];
    v[187] = (v[187] >>> (lk[1] % 16)) | (v[187] << (32 - (lk[1] % 16)));
    v[186] -= lk[0];
    v[189] = (v[189] >>> (lk[1] % 16)) | (v[189] << (32 - (lk[1] % 16)));
    v[188] += lk[0];
    v[191] -= lk[1];
    v[190] = (v[190] << (lk[0] % 16)) | (v[190] >>> (32 - (lk[0] % 16)));
    v[193] = (v[193] << (lk[1] % 16)) | (v[193] >>> (32 - (lk[1] % 16)));
    v[192] = (v[192] >>> (lk[0] % 16)) | (v[192] << (32 - (lk[0] % 16)));
    v[195] -= lk[1];
    v[194] ^= lk[0];
    v[197] -= lk[1];
    v[196] -= lk[0];
    v[199] += lk[1];
    v[198] -= lk[0];
    v[201] ^= lk[1];
    v[200] = (v[200] >>> (lk[0] % 16)) | (v[200] << (32 - (lk[0] % 16)));
    v[203] -= lk[1];
    v[202] ^= lk[0];
    v[205] = (v[205] >>> (lk[1] % 16)) | (v[205] << (32 - (lk[1] % 16)));
    v[204] -= lk[0];
    v[207] = (v[207] >>> (lk[1] % 16)) | (v[207] << (32 - (lk[1] % 16)));
    v[206] += lk[0];
    v[209] -= lk[1];
    v[208] = (v[208] << (lk[0] % 16)) | (v[208] >>> (32 - (lk[0] % 16)));
    v[211] = (v[211] << (lk[1] % 16)) | (v[211] >>> (32 - (lk[1] % 16)));
    v[210] = (v[210] >>> (lk[0] % 16)) | (v[210] << (32 - (lk[0] % 16)));
    v[213] -= lk[1];
    v[212] ^= lk[0];
    v[215] -= lk[1];
    v[214] -= lk[0];
    v[217] += lk[1];
    v[216] -= lk[0];
    v[219] ^= lk[1];
    v[218] = (v[218] >>> (lk[0] % 16)) | (v[218] << (32 - (lk[0] % 16)));
    v[221] -= lk[1];
    v[220] ^= lk[0];
    v[223] = (v[223] >>> (lk[1] % 16)) | (v[223] << (32 - (lk[1] % 16)));
    v[222] -= lk[0];
    v[225] = (v[225] >>> (lk[1] % 16)) | (v[225] << (32 - (lk[1] % 16)));
    v[224] += lk[0];
    v[227] -= lk[1];
    v[226] = (v[226] << (lk[0] % 16)) | (v[226] >>> (32 - (lk[0] % 16)));
    v[229] = (v[229] << (lk[1] % 16)) | (v[229] >>> (32 - (lk[1] % 16)));
    v[228] = (v[228] >>> (lk[0] % 16)) | (v[228] << (32 - (lk[0] % 16)));
    v[231] -= lk[1];
    v[230] ^= lk[0];
    v[233] -= lk[1];
    v[232] -= lk[0];
    v[235] += lk[1];
    v[234] -= lk[0];
    v[237] ^= lk[1];
    v[236] = (v[236] >>> (lk[0] % 16)) | (v[236] << (32 - (lk[0] % 16)));
    v[239] -= lk[1];
    v[238] ^= lk[0];
    v[241] = (v[241] >>> (lk[1] % 16)) | (v[241] << (32 - (lk[1] % 16)));
    v[240] -= lk[0];
    v[243] = (v[243] >>> (lk[1] % 16)) | (v[243] << (32 - (lk[1] % 16)));
    v[242] += lk[0];
    v[245] -= lk[1];
    v[244] = (v[244] << (lk[0] % 16)) | (v[244] >>> (32 - (lk[0] % 16)));
    v[247] = (v[247] << (lk[1] % 16)) | (v[247] >>> (32 - (lk[1] % 16)));
    v[246] = (v[246] >>> (lk[0] % 16)) | (v[246] << (32 - (lk[0] % 16)));
    v[249] -= lk[1];
    v[248] ^= lk[0];
    v[251] -= lk[1];
    v[250] -= lk[0];
    v[253] += lk[1];
    v[252] -= lk[0];
    v[255] ^= lk[1];
    v[254] = (v[254] >>> (lk[0] % 16)) | (v[254] << (32 - (lk[0] % 16)));
    v[257] -= lk[1];
    v[256] ^= lk[0];
    v[259] = (v[259] >>> (lk[1] % 16)) | (v[259] << (32 - (lk[1] % 16)));
    v[258] -= lk[0];
    v[261] = (v[261] >>> (lk[1] % 16)) | (v[261] << (32 - (lk[1] % 16)));
    v[260] += lk[0];
    v[263] -= lk[1];
    v[262] = (v[262] << (lk[0] % 16)) | (v[262] >>> (32 - (lk[0] % 16)));
    v[265] = (v[265] << (lk[1] % 16)) | (v[265] >>> (32 - (lk[1] % 16)));
    v[264] = (v[264] >>> (lk[0] % 16)) | (v[264] << (32 - (lk[0] % 16)));
    v[267] -= lk[1];
    v[266] ^= lk[0];
    v[269] -= lk[1];
    v[268] -= lk[0];
    v[271] += lk[1];
    v[270] -= lk[0];
    v[273] ^= lk[1];
    v[272] = (v[272] >>> (lk[0] % 16)) | (v[272] << (32 - (lk[0] % 16)));
    v[275] -= lk[1];
    v[274] ^= lk[0];
    v[277] = (v[277] >>> (lk[1] % 16)) | (v[277] << (32 - (lk[1] % 16)));
    v[276] -= lk[0];
    v[279] = (v[279] >>> (lk[1] % 16)) | (v[279] << (32 - (lk[1] % 16)));
    v[278] += lk[0];
    v[281] -= lk[1];
    v[280] = (v[280] << (lk[0] % 16)) | (v[280] >>> (32 - (lk[0] % 16)));
    v[283] = (v[283] << (lk[1] % 16)) | (v[283] >>> (32 - (lk[1] % 16)));
    v[282] = (v[282] >>> (lk[0] % 16)) | (v[282] << (32 - (lk[0] % 16)));
    v[285] -= lk[1];
    v[284] ^= lk[0];
    v[287] -= lk[1];
    v[286] -= lk[0];
    v[289] += lk[1];
    v[288] -= lk[0];
    v[291] ^= lk[1];
    v[290] = (v[290] >>> (lk[0] % 16)) | (v[290] << (32 - (lk[0] % 16)));
    v[293] -= lk[1];
    v[292] ^= lk[0];
    v[295] = (v[295] >>> (lk[1] % 16)) | (v[295] << (32 - (lk[1] % 16)));
    v[294] -= lk[0];
    v[297] = (v[297] >>> (lk[1] % 16)) | (v[297] << (32 - (lk[1] % 16)));
    v[296] += lk[0];
    v[299] -= lk[1];
    v[298] = (v[298] << (lk[0] % 16)) | (v[298] >>> (32 - (lk[0] % 16)));
    v[301] = (v[301] << (lk[1] % 16)) | (v[301] >>> (32 - (lk[1] % 16)));
    v[300] = (v[300] >>> (lk[0] % 16)) | (v[300] << (32 - (lk[0] % 16)));
    v[303] -= lk[1];
    v[302] ^= lk[0];
    v[305] -= lk[1];
    v[304] -= lk[0];
    v[307] += lk[1];
    v[306] -= lk[0];
    v[309] ^= lk[1];
    v[308] = (v[308] >>> (lk[0] % 16)) | (v[308] << (32 - (lk[0] % 16)));
    v[311] -= lk[1];
    v[310] ^= lk[0];
    v[313] = (v[313] >>> (lk[1] % 16)) | (v[313] << (32 - (lk[1] % 16)));
    v[312] -= lk[0];
    v[315] = (v[315] >>> (lk[1] % 16)) | (v[315] << (32 - (lk[1] % 16)));
    v[314] += lk[0];
    v[317] -= lk[1];
    v[316] = (v[316] << (lk[0] % 16)) | (v[316] >>> (32 - (lk[0] % 16)));
    v[319] = (v[319] << (lk[1] % 16)) | (v[319] >>> (32 - (lk[1] % 16)));
    v[318] = (v[318] >>> (lk[0] % 16)) | (v[318] << (32 - (lk[0] % 16)));
    v[321] -= lk[1];
    v[320] ^= lk[0];
    v[323] -= lk[1];
    v[322] -= lk[0];
    v[325] += lk[1];
    v[324] -= lk[0];
    v[327] ^= lk[1];
    v[326] = (v[326] >>> (lk[0] % 16)) | (v[326] << (32 - (lk[0] % 16)));
    v[329] -= lk[1];
    v[328] ^= lk[0];
    v[331] = (v[331] >>> (lk[1] % 16)) | (v[331] << (32 - (lk[1] % 16)));
    v[330] -= lk[0];
    v[333] = (v[333] >>> (lk[1] % 16)) | (v[333] << (32 - (lk[1] % 16)));
    v[332] += lk[0];
    v[335] -= lk[1];
    v[334] = (v[334] << (lk[0] % 16)) | (v[334] >>> (32 - (lk[0] % 16)));
    v[337] = (v[337] << (lk[1] % 16)) | (v[337] >>> (32 - (lk[1] % 16)));
    v[336] = (v[336] >>> (lk[0] % 16)) | (v[336] << (32 - (lk[0] % 16)));
    v[339] -= lk[1];
    v[338] ^= lk[0];
    v[341] -= lk[1];
    v[340] -= lk[0];
    v[343] += lk[1];
    v[342] -= lk[0];
    v[345] ^= lk[1];
    v[344] = (v[344] >>> (lk[0] % 16)) | (v[344] << (32 - (lk[0] % 16)));
    v[347] -= lk[1];
    v[346] ^= lk[0];
    v[349] = (v[349] >>> (lk[1] % 16)) | (v[349] << (32 - (lk[1] % 16)));
    v[348] -= lk[0];
    v[351] = (v[351] >>> (lk[1] % 16)) | (v[351] << (32 - (lk[1] % 16)));
    v[350] += lk[0];
    v[353] -= lk[1];
    v[352] = (v[352] << (lk[0] % 16)) | (v[352] >>> (32 - (lk[0] % 16)));
    v[355] = (v[355] << (lk[1] % 16)) | (v[355] >>> (32 - (lk[1] % 16)));
    v[354] = (v[354] >>> (lk[0] % 16)) | (v[354] << (32 - (lk[0] % 16)));
    v[357] -= lk[1];
    v[356] ^= lk[0];
    v[359] -= lk[1];
    v[358] -= lk[0];
    v[361] += lk[1];
    v[360] -= lk[0];
    v[363] ^= lk[1];
    v[362] = (v[362] >>> (lk[0] % 16)) | (v[362] << (32 - (lk[0] % 16)));
    v[365] -= lk[1];
    v[364] ^= lk[0];
    v[367] = (v[367] >>> (lk[1] % 16)) | (v[367] << (32 - (lk[1] % 16)));
    v[366] -= lk[0];
    v[369] = (v[369] >>> (lk[1] % 16)) | (v[369] << (32 - (lk[1] % 16)));
    v[368] += lk[0];
    v[371] -= lk[1];
    v[370] = (v[370] << (lk[0] % 16)) | (v[370] >>> (32 - (lk[0] % 16)));
    v[373] = (v[373] << (lk[1] % 16)) | (v[373] >>> (32 - (lk[1] % 16)));
    v[372] = (v[372] >>> (lk[0] % 16)) | (v[372] << (32 - (lk[0] % 16)));
    v[375] -= lk[1];
    v[374] ^= lk[0];
    v[377] -= lk[1];
    v[376] -= lk[0];
    v[379] += lk[1];
    v[378] -= lk[0];
    v[381] ^= lk[1];
    v[380] = (v[380] >>> (lk[0] % 16)) | (v[380] << (32 - (lk[0] % 16)));
    v[383] -= lk[1];
    v[382] ^= lk[0];
    v[385] = (v[385] >>> (lk[1] % 16)) | (v[385] << (32 - (lk[1] % 16)));
    v[384] -= lk[0];
    v[387] = (v[387] >>> (lk[1] % 16)) | (v[387] << (32 - (lk[1] % 16)));
    v[386] += lk[0];
    v[389] -= lk[1];
    v[388] = (v[388] << (lk[0] % 16)) | (v[388] >>> (32 - (lk[0] % 16)));
    v[391] = (v[391] << (lk[1] % 16)) | (v[391] >>> (32 - (lk[1] % 16)));
    v[390] = (v[390] >>> (lk[0] % 16)) | (v[390] << (32 - (lk[0] % 16)));
    v[393] -= lk[1];
    v[392] ^= lk[0];
    v[395] -= lk[1];
    v[394] -= lk[0];
    v[397] += lk[1];
    v[396] -= lk[0];
    v[399] ^= lk[1];
    v[398] = (v[398] >>> (lk[0] % 16)) | (v[398] << (32 - (lk[0] % 16)));
    v[401] -= lk[1];
    v[400] ^= lk[0];
    v[403] = (v[403] >>> (lk[1] % 16)) | (v[403] << (32 - (lk[1] % 16)));
    v[402] -= lk[0];
    for (var I = 0; I < 404; I += 2) {
        var i, v0 = v[I] ^ k2[0],
        v1 = v[I + 1] ^ k2[1],
        d = 0x9E3779B9,
        sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 403; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x5b379eab;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(y09eb5d9f11815852d90b0, y09eb5d9f11815852d90b1, y09eb5d9f11815852d90b2);
}
var o049f9ac7c6b194f0 = [0xaa89c04f, 0x3dc17fa4, 0x2a986569, 0xddfdbf3c, 0x6597c0f6, 0x2c0d3b41, 0xcf637b4, 0xa132696b, 0x42fef3c6, 0x99943275, 0x1f1bbe95, 0x3b5a67e0, 0x5a244b95, 0xc34da379, 0xaa5ec6b1, 0xb813fef4, 0x6c93ea26, 0xa13d19b7, 0x81c58cc4, 0xfcbdac4d, 0x21bfdb08, 0xb164c1e0, 0x4ee00354, 0xae8ab95e, 0x8039762c, 0xa1879e02, 0x5bd1be0, 0xbc96d9e7, 0x379650b0, 0x5c607916, 0xd5329aac, 0xe9efa0ed, 0x714c9dee, 0x3d7bafe7, 0x70b46fd1, 0x42d57e65, 0x876c10d9, 0x44cd04fe, 0x5ade29c8, 0x878b2f44, 0xa3eb45c7, 0x82aaf096, 0x3d59650a, 0xa3ff3023, 0x310f003b, 0x276a6d41, 0x1526f555, 0xb4a46299, 0xdbe21c03, 0xd31d83c7, 0x55f6e7e3, 0xee133b97, 0x729b4167, 0x17afc1, 0x6a7a6605, 0xf6de3cc1, 0x68b9e400, 0xfacfa059, 0x44ac4367, 0xecfb8ea, 0x8a630517, 0xf91da82a, 0x22d1b3eb, 0x480e0036, 0xdebe6667, 0x43fb676a, 0x348ea8e3, 0xc335ae8c, 0x2a6f8598, 0xd76843f1, 0xaf5c676a, 0xd697832b, 0x5fe6fe23, 0xbf627fc3, 0x7505b9b3, 0xfcf06f0a, 0xf5d32005, 0x402b3059, 0x92f2d9bc, 0x3cd443f6, 0x3370ac82, 0x93543717, 0xeb9e4e56, 0x6c157778, 0x70baf718, 0xb3501563, 0x9287672c, 0x7d16ed7f, 0xf8be43f0, 0xa9b81dde, 0x1903477a, 0x62a34849, 0xff35b652, 0xe15794cc, 0xf99c32bf, 0xa0552b24, 0x155ce045, 0xcfa68ab8, 0xc6bda2ea, 0x45ef987b, 0x15d4ccae, 0xad231c4b, 0x10c09007, 0x11327020, 0x113d376a, 0xe7a4e91f, 0xa3f03c6f, 0xcfbacbfa, 0xe81d4dbc, 0x25ce1a23, 0x84e26e5a, 0xa17f62ed, 0xce2c461d, 0x77f94834, 0x741449b8, 0xd9a1d1c5, 0xa949649e, 0x4df1206c, 0xd4ebfd6, 0x8f7cdba5];
var o049f9ac7c6b194f1 = [0xc516b151, 0x42e1c56c, 0x72201bca, 0xc9015fa4, 0x8ab4bd97, 0x1446ca9c, 0x1cf73ec1, 0xc12abdc1, 0xc86c6484, 0xa4127c50, 0xb12a0d94, 0x70382779, 0xd994c5f3, 0x1da84883, 0xb53ef25d, 0xf7a10bdb, 0xca06d5e1, 0x47182139, 0x7262e61a, 0x5ae9262d, 0x70005d9d, 0xe4e0286f, 0xd441d13c, 0xd21d47c8, 0xb9e192ce, 0xba0dfa2c, 0xcaf3e0d5, 0x94b6e0bc, 0x72794578, 0x9a2b8d7b, 0xb67a3a4, 0x228b1a88, 0xc96abde9, 0x13199c48, 0x5f3f5461, 0xd4185369, 0x4ac67be0, 0x8ac8a8, 0xe2e6ed81, 0x6d5703f0, 0x855d964b, 0xcc7b7721, 0x60eb58c5, 0xa3328102, 0x1a764446, 0x20f616e7, 0x3790ebb, 0x37546490, 0x1026f71d, 0xf1efd602, 0x9c703b92, 0xde9c8550, 0xa9c77d21, 0x145bd786, 0xd337ddcf, 0x80dd0624, 0x8eff2921, 0x93f82a4b, 0xc4d684b9, 0x354d1b33, 0x29c7e362, 0x4537328c, 0x98ea743d, 0x8067c3e8, 0xa491f0e9, 0x3bfe49f9, 0x3db14bb6, 0x205234ee, 0x706d36ba, 0xa7215d2d, 0xba052900, 0x534b7c9d, 0x7a6b2f74, 0x4c6cf5e3, 0xef8f19d5, 0xea16e27d, 0xfc90e1c8, 0xd7e1a91, 0x20ed194a, 0x3a3023f5, 0x5163e601, 0xf4d6d35d, 0x56b42e60, 0xeda50210, 0x61f82150, 0x293b5890, 0xc13fee5e, 0x1d488e54, 0x326293c3, 0x774a442c, 0x92258f62, 0x928fe531, 0xc851fc29, 0xed8b1ce9, 0x9fce33bc, 0x1aa41879, 0xc6c2bf67, 0x6af3dbf0, 0xddfa93e3, 0xc07a9d97, 0x92523595, 0xb6d99fae, 0x43af1317, 0xab30d5da, 0x20646299, 0x1939a28f, 0x8ecf4468, 0x4f878aa9, 0xa9d3ab38, 0x37613fe2, 0x7f59be55, 0xe4bee4b9, 0x950b1b5e, 0x5577caa8, 0x35e45996, 0x3cb8180e, 0x7e9fea60, 0xc4e644c3, 0xfea2a74b, 0xfe9c00e8];
function q7cad0d5d90(e61dg40c0, e61dg40c1, e61dg40c2, k) {
    var rk = [39, 36, 38, 24, 31, 24, 32, 33, 10, 39, 36, 38, 24, 31, 24, 32, 33, 10, 39, 36, 38, 24, 31, 24, 32, 33, 10, 39, 36, 38, 24, 31, 24, 32, 33, 10, 39, 36, 38, 24, 31, 24, 32, 33, 10, 39, 36, 38, 24, 31, 24, 32, 33, 10, 39, 36, 38, 24, 31, 24];
    var k2 = [0x185af4a5, 0x79e39caa];
    var lk = [0x185af4a5, 0x79e39caa];
    var v = o049f9ac7c6b194f0.slice(0);
    for (var O = 0; O < 120; O++) {
        v[O] ^= 0x18514515;
    }
    v[1] = (v[1] << (lk[1] % 16)) | (v[1] >>> (32 - (lk[1] % 16)));
    v[0] -= lk[0];
    v[3] = (v[3] >>> (lk[1] % 16)) | (v[3] << (32 - (lk[1] % 16)));
    v[2] -= lk[0];
    v[5] -= lk[1];
    v[4] -= lk[0];
    v[7] += lk[1];
    v[6] += lk[0];
    v[9] = (v[9] << (lk[1] % 16)) | (v[9] >>> (32 - (lk[1] % 16)));
    v[8] -= lk[0];
    v[11] -= lk[1];
    v[10] = (v[10] << (lk[0] % 16)) | (v[10] >>> (32 - (lk[0] % 16)));
    v[13] += lk[1];
    v[12] = (v[12] << (lk[0] % 16)) | (v[12] >>> (32 - (lk[0] % 16)));
    v[15] = (v[15] >>> (lk[1] % 16)) | (v[15] << (32 - (lk[1] % 16)));
    v[14] -= lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] = (v[19] << (lk[1] % 16)) | (v[19] >>> (32 - (lk[1] % 16)));
    v[18] -= lk[0];
    v[21] = (v[21] >>> (lk[1] % 16)) | (v[21] << (32 - (lk[1] % 16)));
    v[20] -= lk[0];
    v[23] -= lk[1];
    v[22] -= lk[0];
    v[25] += lk[1];
    v[24] += lk[0];
    v[27] = (v[27] << (lk[1] % 16)) | (v[27] >>> (32 - (lk[1] % 16)));
    v[26] -= lk[0];
    v[29] -= lk[1];
    v[28] = (v[28] << (lk[0] % 16)) | (v[28] >>> (32 - (lk[0] % 16)));
    v[31] += lk[1];
    v[30] = (v[30] << (lk[0] % 16)) | (v[30] >>> (32 - (lk[0] % 16)));
    v[33] = (v[33] >>> (lk[1] % 16)) | (v[33] << (32 - (lk[1] % 16)));
    v[32] -= lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] = (v[37] << (lk[1] % 16)) | (v[37] >>> (32 - (lk[1] % 16)));
    v[36] -= lk[0];
    v[39] = (v[39] >>> (lk[1] % 16)) | (v[39] << (32 - (lk[1] % 16)));
    v[38] -= lk[0];
    v[41] -= lk[1];
    v[40] -= lk[0];
    v[43] += lk[1];
    v[42] += lk[0];
    v[45] = (v[45] << (lk[1] % 16)) | (v[45] >>> (32 - (lk[1] % 16)));
    v[44] -= lk[0];
    v[47] -= lk[1];
    v[46] = (v[46] << (lk[0] % 16)) | (v[46] >>> (32 - (lk[0] % 16)));
    v[49] += lk[1];
    v[48] = (v[48] << (lk[0] % 16)) | (v[48] >>> (32 - (lk[0] % 16)));
    v[51] = (v[51] >>> (lk[1] % 16)) | (v[51] << (32 - (lk[1] % 16)));
    v[50] -= lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] = (v[55] << (lk[1] % 16)) | (v[55] >>> (32 - (lk[1] % 16)));
    v[54] -= lk[0];
    v[57] = (v[57] >>> (lk[1] % 16)) | (v[57] << (32 - (lk[1] % 16)));
    v[56] -= lk[0];
    v[59] -= lk[1];
    v[58] -= lk[0];
    v[61] += lk[1];
    v[60] += lk[0];
    v[63] = (v[63] << (lk[1] % 16)) | (v[63] >>> (32 - (lk[1] % 16)));
    v[62] -= lk[0];
    v[65] -= lk[1];
    v[64] = (v[64] << (lk[0] % 16)) | (v[64] >>> (32 - (lk[0] % 16)));
    v[67] += lk[1];
    v[66] = (v[66] << (lk[0] % 16)) | (v[66] >>> (32 - (lk[0] % 16)));
    v[69] = (v[69] >>> (lk[1] % 16)) | (v[69] << (32 - (lk[1] % 16)));
    v[68] -= lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] = (v[73] << (lk[1] % 16)) | (v[73] >>> (32 - (lk[1] % 16)));
    v[72] -= lk[0];
    v[75] = (v[75] >>> (lk[1] % 16)) | (v[75] << (32 - (lk[1] % 16)));
    v[74] -= lk[0];
    v[77] -= lk[1];
    v[76] -= lk[0];
    v[79] += lk[1];
    v[78] += lk[0];
    v[81] = (v[81] << (lk[1] % 16)) | (v[81] >>> (32 - (lk[1] % 16)));
    v[80] -= lk[0];
    v[83] -= lk[1];
    v[82] = (v[82] << (lk[0] % 16)) | (v[82] >>> (32 - (lk[0] % 16)));
    v[85] += lk[1];
    v[84] = (v[84] << (lk[0] % 16)) | (v[84] >>> (32 - (lk[0] % 16)));
    v[87] = (v[87] >>> (lk[1] % 16)) | (v[87] << (32 - (lk[1] % 16)));
    v[86] -= lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] = (v[91] << (lk[1] % 16)) | (v[91] >>> (32 - (lk[1] % 16)));
    v[90] -= lk[0];
    v[93] = (v[93] >>> (lk[1] % 16)) | (v[93] << (32 - (lk[1] % 16)));
    v[92] -= lk[0];
    v[95] -= lk[1];
    v[94] -= lk[0];
    v[97] += lk[1];
    v[96] += lk[0];
    v[99] = (v[99] << (lk[1] % 16)) | (v[99] >>> (32 - (lk[1] % 16)));
    v[98] -= lk[0];
    v[101] -= lk[1];
    v[100] = (v[100] << (lk[0] % 16)) | (v[100] >>> (32 - (lk[0] % 16)));
    v[103] += lk[1];
    v[102] = (v[102] << (lk[0] % 16)) | (v[102] >>> (32 - (lk[0] % 16)));
    v[105] = (v[105] >>> (lk[1] % 16)) | (v[105] << (32 - (lk[1] % 16)));
    v[104] -= lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] = (v[109] << (lk[1] % 16)) | (v[109] >>> (32 - (lk[1] % 16)));
    v[108] -= lk[0];
    v[111] = (v[111] >>> (lk[1] % 16)) | (v[111] << (32 - (lk[1] % 16)));
    v[110] -= lk[0];
    v[113] -= lk[1];
    v[112] -= lk[0];
    v[115] += lk[1];
    v[114] += lk[0];
    v[117] = (v[117] << (lk[1] % 16)) | (v[117] >>> (32 - (lk[1] % 16)));
    v[116] -= lk[0];
    v[119] -= lk[1];
    v[118] = (v[118] << (lk[0] % 16)) | (v[118] >>> (32 - (lk[0] % 16)));
    for (var I = 0; I < 120; I += 2) {
        var i, v0 = v[I] ^ k2[0],
        v1 = v[I + 1] ^ k2[1],
        d = 0x9E3779B9,
        sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 119; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x18514515;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(e61dg40c0, e61dg40c1, e61dg40c2, k);
}
function q7cad0d5d91(e61dg40c0, e61dg40c1, e61dg40c2, k) {
    var rk = [27, 17, 16, 11, 16, 38, 34, 13, 10, 27, 17, 16, 11, 16, 38, 34, 13, 10, 27, 17, 16, 11, 16, 38, 34, 13, 10, 27, 17, 16, 11, 16, 38, 34, 13, 10, 27, 17, 16, 11, 16, 38, 34, 13, 10, 27, 17, 16, 11, 16, 38, 34, 13, 10, 27, 17, 16, 11, 16, 38];
    var k2 = [0x274dc52e, 0x540c25cc];
    var lk = [0x274dc52e, 0x540c25cc];
    var v = o049f9ac7c6b194f1.slice(0);
    for (var O = 0; O < 120; O++) {
        v[O] ^= 0x4645cbd2;
    }
    v[1] ^= lk[1];
    v[0] += lk[0];
    v[3] -= lk[1];
    v[2] -= lk[0];
    v[5] -= lk[1];
    v[4] += lk[0];
    v[7] = (v[7] >>> (lk[1] % 16)) | (v[7] << (32 - (lk[1] % 16)));
    v[6] = (v[6] << (lk[0] % 16)) | (v[6] >>> (32 - (lk[0] % 16)));
    v[9] += lk[1];
    v[8] ^= lk[0];
    v[11] ^= lk[1];
    v[10] ^= lk[0];
    v[13] = (v[13] << (lk[1] % 16)) | (v[13] >>> (32 - (lk[1] % 16)));
    v[12] ^= lk[0];
    v[15] = (v[15] >>> (lk[1] % 16)) | (v[15] << (32 - (lk[1] % 16)));
    v[14] = (v[14] >>> (lk[0] % 16)) | (v[14] << (32 - (lk[0] % 16)));
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] ^= lk[1];
    v[18] += lk[0];
    v[21] -= lk[1];
    v[20] -= lk[0];
    v[23] -= lk[1];
    v[22] += lk[0];
    v[25] = (v[25] >>> (lk[1] % 16)) | (v[25] << (32 - (lk[1] % 16)));
    v[24] = (v[24] << (lk[0] % 16)) | (v[24] >>> (32 - (lk[0] % 16)));
    v[27] += lk[1];
    v[26] ^= lk[0];
    v[29] ^= lk[1];
    v[28] ^= lk[0];
    v[31] = (v[31] << (lk[1] % 16)) | (v[31] >>> (32 - (lk[1] % 16)));
    v[30] ^= lk[0];
    v[33] = (v[33] >>> (lk[1] % 16)) | (v[33] << (32 - (lk[1] % 16)));
    v[32] = (v[32] >>> (lk[0] % 16)) | (v[32] << (32 - (lk[0] % 16)));
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] ^= lk[1];
    v[36] += lk[0];
    v[39] -= lk[1];
    v[38] -= lk[0];
    v[41] -= lk[1];
    v[40] += lk[0];
    v[43] = (v[43] >>> (lk[1] % 16)) | (v[43] << (32 - (lk[1] % 16)));
    v[42] = (v[42] << (lk[0] % 16)) | (v[42] >>> (32 - (lk[0] % 16)));
    v[45] += lk[1];
    v[44] ^= lk[0];
    v[47] ^= lk[1];
    v[46] ^= lk[0];
    v[49] = (v[49] << (lk[1] % 16)) | (v[49] >>> (32 - (lk[1] % 16)));
    v[48] ^= lk[0];
    v[51] = (v[51] >>> (lk[1] % 16)) | (v[51] << (32 - (lk[1] % 16)));
    v[50] = (v[50] >>> (lk[0] % 16)) | (v[50] << (32 - (lk[0] % 16)));
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] ^= lk[1];
    v[54] += lk[0];
    v[57] -= lk[1];
    v[56] -= lk[0];
    v[59] -= lk[1];
    v[58] += lk[0];
    v[61] = (v[61] >>> (lk[1] % 16)) | (v[61] << (32 - (lk[1] % 16)));
    v[60] = (v[60] << (lk[0] % 16)) | (v[60] >>> (32 - (lk[0] % 16)));
    v[63] += lk[1];
    v[62] ^= lk[0];
    v[65] ^= lk[1];
    v[64] ^= lk[0];
    v[67] = (v[67] << (lk[1] % 16)) | (v[67] >>> (32 - (lk[1] % 16)));
    v[66] ^= lk[0];
    v[69] = (v[69] >>> (lk[1] % 16)) | (v[69] << (32 - (lk[1] % 16)));
    v[68] = (v[68] >>> (lk[0] % 16)) | (v[68] << (32 - (lk[0] % 16)));
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] ^= lk[1];
    v[72] += lk[0];
    v[75] -= lk[1];
    v[74] -= lk[0];
    v[77] -= lk[1];
    v[76] += lk[0];
    v[79] = (v[79] >>> (lk[1] % 16)) | (v[79] << (32 - (lk[1] % 16)));
    v[78] = (v[78] << (lk[0] % 16)) | (v[78] >>> (32 - (lk[0] % 16)));
    v[81] += lk[1];
    v[80] ^= lk[0];
    v[83] ^= lk[1];
    v[82] ^= lk[0];
    v[85] = (v[85] << (lk[1] % 16)) | (v[85] >>> (32 - (lk[1] % 16)));
    v[84] ^= lk[0];
    v[87] = (v[87] >>> (lk[1] % 16)) | (v[87] << (32 - (lk[1] % 16)));
    v[86] = (v[86] >>> (lk[0] % 16)) | (v[86] << (32 - (lk[0] % 16)));
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] ^= lk[1];
    v[90] += lk[0];
    v[93] -= lk[1];
    v[92] -= lk[0];
    v[95] -= lk[1];
    v[94] += lk[0];
    v[97] = (v[97] >>> (lk[1] % 16)) | (v[97] << (32 - (lk[1] % 16)));
    v[96] = (v[96] << (lk[0] % 16)) | (v[96] >>> (32 - (lk[0] % 16)));
    v[99] += lk[1];
    v[98] ^= lk[0];
    v[101] ^= lk[1];
    v[100] ^= lk[0];
    v[103] = (v[103] << (lk[1] % 16)) | (v[103] >>> (32 - (lk[1] % 16)));
    v[102] ^= lk[0];
    v[105] = (v[105] >>> (lk[1] % 16)) | (v[105] << (32 - (lk[1] % 16)));
    v[104] = (v[104] >>> (lk[0] % 16)) | (v[104] << (32 - (lk[0] % 16)));
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] ^= lk[1];
    v[108] += lk[0];
    v[111] -= lk[1];
    v[110] -= lk[0];
    v[113] -= lk[1];
    v[112] += lk[0];
    v[115] = (v[115] >>> (lk[1] % 16)) | (v[115] << (32 - (lk[1] % 16)));
    v[114] = (v[114] << (lk[0] % 16)) | (v[114] >>> (32 - (lk[0] % 16)));
    v[117] += lk[1];
    v[116] ^= lk[0];
    v[119] ^= lk[1];
    v[118] ^= lk[0];
    for (var I = 0; I < 120; I += 2) {
        var i, v0 = v[I] ^ k2[0],
        v1 = v[I + 1] ^ k2[1],
        d = 0x9E3779B9,
        sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 119; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x4645cbd2;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(e61dg40c0, e61dg40c1, e61dg40c2, k);
}
var edc0j875a0a914a0664 = [0xb833fb6b, 0xf5fc9e25, 0x23ce5ea6, 0x63a5293d, 0x4de9dee9, 0xfdc50edb, 0xd5db43d9, 0xccee853f, 0x8d55fbed, 0x949f6043, 0xdf508848, 0x67c457d2, 0x54d58044, 0x847e9e3c, 0x86c0eb98, 0x49d3835f, 0x3fe5ff1d, 0x5d6b3507, 0xd58661f6, 0x6cbbf52a, 0xf80771a4, 0x945ce447, 0x6fbeddef, 0xd330fe3, 0x912cb0ff, 0x4b42ca37, 0xe6b3ef4a, 0x3ae51e40, 0x3bf2e0c, 0xf87662fc, 0x5953a900, 0x95ea97ce, 0x89b54213, 0x6f0f94d4, 0x7f61a2b4, 0x7151d8da, 0x86bd762a, 0xa854debe, 0x82010119, 0x4e78a33b, 0x4edfac7f, 0xa12546b7, 0xb3d392fd, 0xdccece58, 0x60590fe0, 0x9f5841b9, 0x16acaf84, 0x76d9d532, 0x73d46b16, 0xc1711e11, 0xda0cd6f7, 0x92863e0a, 0x73738f13, 0xafa71a1a, 0x57b94cda, 0x60da2f12, 0xcc45cb3a, 0x7ffcf431, 0x2ad5af45, 0xbf8bc19, 0x7f482b1c, 0x200698ff, 0xadc31909, 0x87bf82d9, 0xd5685151, 0x3b453b5f, 0x6fb1d742, 0x62dd17de, 0xcd7f8dc6, 0x7a1472de, 0x61448ee0, 0x8a2e6000, 0xf51aa7de, 0xe9428c14, 0x9f9b9377, 0x837e2830, 0xda328f0c, 0xf0b4f2b1, 0xed46ba1d, 0xc2f7b2c7, 0x414a6d9d, 0x16850454, 0x31c3e733, 0x54253a70, 0x716c36f6, 0x415cd62c, 0x84dcd1be, 0xed180f9e, 0xd5dead30, 0xc8c59af8, 0x44c2a1da, 0xb77f9b1f, 0x8352c8b2, 0xc4307192, 0xe7450b7d, 0xbf03a015, 0xc9fe174d, 0x97c6abee, 0xc99a1c36, 0xf5320d1c, 0x983a717b, 0x883dc10, 0xd182f0cf, 0xed5ac3fe, 0x524abf3f, 0x377e6142, 0x8c71c6e3, 0xc6eaa693, 0xd0eba720, 0x62174cb4];
function k927cea2d4369(edc0j875a0a914a06640, edc0j875a0a914a06641, edc0j875a0a914a06642, edc0j875a0a914a06643) {
    var rk = [22, 40, 11, 35, 22, 15, 30, 14, 10, 22, 40, 11, 35, 22, 15, 30, 14, 10, 22, 40, 11, 35, 22, 15, 30, 14, 10, 22, 40, 11, 35, 22, 15, 30, 14, 10, 22, 40, 11, 35, 22, 15, 30, 14, 10, 22, 40, 11, 35, 22, 15, 30, 14, 10, 22];
    var k2 = [0x41c80ec1, 0x27934031];
    var lk = [0x41c80ec1, 0x27934031];
    var v = edc0j875a0a914a0664.slice(0);
    var k = [0x174d4dc8, 0xfb8b26a6, 0x7b5a767d, 0x3b251e1f];
    for (var O = 0; O < 110; O++) {
        v[O] ^= 0x40451da9;
    }
    v[1] = (v[1] << (lk[1] % 16)) | (v[1] >>> (32 - (lk[1] % 16)));
    v[0] = (v[0] << (lk[0] % 16)) | (v[0] >>> (32 - (lk[0] % 16)));
    v[3] ^= lk[1];
    v[2] += lk[0];
    v[5] = (v[5] >>> (lk[1] % 16)) | (v[5] << (32 - (lk[1] % 16)));
    v[4] ^= lk[0];
    v[7] = (v[7] << (lk[1] % 16)) | (v[7] >>> (32 - (lk[1] % 16)));
    v[6] -= lk[0];
    v[9] ^= lk[1];
    v[8] += lk[0];
    v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
    v[10] -= lk[0];
    v[13] = (v[13] >>> (lk[1] % 16)) | (v[13] << (32 - (lk[1] % 16)));
    v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
    v[15] += lk[1];
    v[14] -= lk[0];
    v[17] -= lk[1];
    v[16] -= lk[0];
    v[19] = (v[19] << (lk[1] % 16)) | (v[19] >>> (32 - (lk[1] % 16)));
    v[18] = (v[18] << (lk[0] % 16)) | (v[18] >>> (32 - (lk[0] % 16)));
    v[21] ^= lk[1];
    v[20] += lk[0];
    v[23] = (v[23] >>> (lk[1] % 16)) | (v[23] << (32 - (lk[1] % 16)));
    v[22] ^= lk[0];
    v[25] = (v[25] << (lk[1] % 16)) | (v[25] >>> (32 - (lk[1] % 16)));
    v[24] -= lk[0];
    v[27] ^= lk[1];
    v[26] += lk[0];
    v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
    v[28] -= lk[0];
    v[31] = (v[31] >>> (lk[1] % 16)) | (v[31] << (32 - (lk[1] % 16)));
    v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
    v[33] += lk[1];
    v[32] -= lk[0];
    v[35] -= lk[1];
    v[34] -= lk[0];
    v[37] = (v[37] << (lk[1] % 16)) | (v[37] >>> (32 - (lk[1] % 16)));
    v[36] = (v[36] << (lk[0] % 16)) | (v[36] >>> (32 - (lk[0] % 16)));
    v[39] ^= lk[1];
    v[38] += lk[0];
    v[41] = (v[41] >>> (lk[1] % 16)) | (v[41] << (32 - (lk[1] % 16)));
    v[40] ^= lk[0];
    v[43] = (v[43] << (lk[1] % 16)) | (v[43] >>> (32 - (lk[1] % 16)));
    v[42] -= lk[0];
    v[45] ^= lk[1];
    v[44] += lk[0];
    v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
    v[46] -= lk[0];
    v[49] = (v[49] >>> (lk[1] % 16)) | (v[49] << (32 - (lk[1] % 16)));
    v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
    v[51] += lk[1];
    v[50] -= lk[0];
    v[53] -= lk[1];
    v[52] -= lk[0];
    v[55] = (v[55] << (lk[1] % 16)) | (v[55] >>> (32 - (lk[1] % 16)));
    v[54] = (v[54] << (lk[0] % 16)) | (v[54] >>> (32 - (lk[0] % 16)));
    v[57] ^= lk[1];
    v[56] += lk[0];
    v[59] = (v[59] >>> (lk[1] % 16)) | (v[59] << (32 - (lk[1] % 16)));
    v[58] ^= lk[0];
    v[61] = (v[61] << (lk[1] % 16)) | (v[61] >>> (32 - (lk[1] % 16)));
    v[60] -= lk[0];
    v[63] ^= lk[1];
    v[62] += lk[0];
    v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
    v[64] -= lk[0];
    v[67] = (v[67] >>> (lk[1] % 16)) | (v[67] << (32 - (lk[1] % 16)));
    v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
    v[69] += lk[1];
    v[68] -= lk[0];
    v[71] -= lk[1];
    v[70] -= lk[0];
    v[73] = (v[73] << (lk[1] % 16)) | (v[73] >>> (32 - (lk[1] % 16)));
    v[72] = (v[72] << (lk[0] % 16)) | (v[72] >>> (32 - (lk[0] % 16)));
    v[75] ^= lk[1];
    v[74] += lk[0];
    v[77] = (v[77] >>> (lk[1] % 16)) | (v[77] << (32 - (lk[1] % 16)));
    v[76] ^= lk[0];
    v[79] = (v[79] << (lk[1] % 16)) | (v[79] >>> (32 - (lk[1] % 16)));
    v[78] -= lk[0];
    v[81] ^= lk[1];
    v[80] += lk[0];
    v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
    v[82] -= lk[0];
    v[85] = (v[85] >>> (lk[1] % 16)) | (v[85] << (32 - (lk[1] % 16)));
    v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
    v[87] += lk[1];
    v[86] -= lk[0];
    v[89] -= lk[1];
    v[88] -= lk[0];
    v[91] = (v[91] << (lk[1] % 16)) | (v[91] >>> (32 - (lk[1] % 16)));
    v[90] = (v[90] << (lk[0] % 16)) | (v[90] >>> (32 - (lk[0] % 16)));
    v[93] ^= lk[1];
    v[92] += lk[0];
    v[95] = (v[95] >>> (lk[1] % 16)) | (v[95] << (32 - (lk[1] % 16)));
    v[94] ^= lk[0];
    v[97] = (v[97] << (lk[1] % 16)) | (v[97] >>> (32 - (lk[1] % 16)));
    v[96] -= lk[0];
    v[99] ^= lk[1];
    v[98] += lk[0];
    v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
    v[100] -= lk[0];
    v[103] = (v[103] >>> (lk[1] % 16)) | (v[103] << (32 - (lk[1] % 16)));
    v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)));
    v[105] += lk[1];
    v[104] -= lk[0];
    v[107] -= lk[1];
    v[106] -= lk[0];
    v[109] = (v[109] << (lk[1] % 16)) | (v[109] >>> (32 - (lk[1] % 16)));
    v[108] = (v[108] << (lk[0] % 16)) | (v[108] >>> (32 - (lk[0] % 16)));
    for (var I = 0; I < 110; I += 2) {
        var i, v0 = v[I] ^ k2[0],
        v1 = v[I + 1] ^ k2[1],
        d = 0x9E3779B9,
        sum = d * rk[I / 2];
        for (i = 0; i < rk[I / 2]; i++) {
            v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
            sum -= d;
            v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
        }
        v[I] = v0 ^ k2[1];
        v[I + 1] = v1 ^ k2[0];
    }
    for (var O = 109; O > 0; O--) {
        v[O] ^= v[O - 1];
    }
    v[0] ^= 0x40451da9;
    var strc = "";
    for (var i = 0; i < v.length; i++) {
        strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
    }
    return eval(strc)(edc0j875a0a914a06640, 32, k, edc0j875a0a914a06641, edc0j875a0a914a06642, edc0j875a0a914a06643);
}
exports = module.exports = {
    sign:ub98484234
}